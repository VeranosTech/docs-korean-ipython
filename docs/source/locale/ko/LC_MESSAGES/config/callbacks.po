# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/config/callbacks.rst:6
msgid "IPython Events"
msgstr ""

#: ../../source/config/callbacks.rst:8
msgid ""
"Extension code can register callbacks functions which will be called on "
"specific events within the IPython code. You can see the current list of "
"available callbacks, and the parameters that will be passed with each, in"
" the callback prototype functions defined in :mod:`IPython.core.events`."
msgstr ""

#: ../../source/config/callbacks.rst:13
msgid ""
"To register callbacks, use "
":meth:`IPython.core.events.EventManager.register`. For example::"
msgstr ""

#: ../../source/config/callbacks.rst:45
msgid "Events"
msgstr ""

#: ../../source/config/callbacks.rst:47
msgid ""
"These are the events IPython will emit. Callbacks will be passed no "
"arguments, unless otherwise specified."
msgstr ""

#: ../../source/config/callbacks.rst:50
msgid "shell_initialized"
msgstr ""

#: ../../source/config/callbacks.rst:57
msgid ""
"This event is triggered only once, at the end of setting up IPython. "
"Extensions registered to load by default as part of configuration can use"
" this to execute code to finalize setup. Callbacks will be passed the "
"InteractiveShell instance."
msgstr ""

#: ../../source/config/callbacks.rst:62
msgid "pre_run_cell"
msgstr ""

#: ../../source/config/callbacks.rst:64
msgid ""
"``pre_run_cell`` fires prior to interactive execution (e.g. a cell in a "
"notebook). It can be used to note the state prior to execution, and keep "
"track of changes. An object containing information used for the code "
"execution is provided as an argument."
msgstr ""

#: ../../source/config/callbacks.rst:69
msgid "pre_execute"
msgstr ""

#: ../../source/config/callbacks.rst:71
msgid ""
"``pre_execute`` is like ``pre_run_cell``, but is triggered prior to *any*"
" execution. Sometimes code can be executed by libraries, etc. which "
"skipping the history/display mechanisms, in which cases ``pre_run_cell`` "
"will not fire."
msgstr ""

#: ../../source/config/callbacks.rst:76
msgid "post_run_cell"
msgstr ""

#: ../../source/config/callbacks.rst:78
msgid ""
"``post_run_cell`` runs after interactive execution (e.g. a cell in a "
"notebook). It can be used to cleanup or notify or perform operations on "
"any side effects produced during execution. For instance, the inline "
"matplotlib backend uses this event to display any figures created but not"
" explicitly displayed during the course of the cell. The object which "
"will be returned as the execution result is provided as an argument."
msgstr ""

#: ../../source/config/callbacks.rst:85
msgid "post_execute"
msgstr ""

#: ../../source/config/callbacks.rst:87
msgid ""
"The same as ``pre_execute``, ``post_execute`` is like ``post_run_cell``, "
"but fires for *all* executions, not just interactive ones."
msgstr ""

#: ../../source/config/callbacks.rst:95
msgid "Module :mod:`IPython.core.hooks`"
msgstr ""

#: ../../source/config/callbacks.rst:94
msgid ""
"The older 'hooks' system allows end users to customise some parts of "
"IPython's behaviour."
msgstr ""

#: ../../source/config/callbacks.rst:98
msgid ":doc:`inputtransforms`"
msgstr ""

#: ../../source/config/callbacks.rst:98
msgid ""
"By registering input transformers that don't change code, you can monitor"
" what is being executed."
msgstr ""

