# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/interactive/magics.rst:3
msgid "Built-in magic commands"
msgstr ""

#: ../../source/interactive/magics.rst:7
msgid ""
"To Jupyter users: Magics are specific to and provided by the IPython "
"kernel. Whether Magics are available on a kernel is a decision that is "
"made by the kernel developer on a per-kernel basis. To work properly, "
"Magics must use a syntax element which is not valid in the underlying "
"language. For example, the IPython kernel uses the `%` syntax element for"
" Magics as `%` is not a valid unary operator in Python. However, `%` "
"might have meaning in other languages."
msgstr ""

#: ../../source/interactive/magics.rst:15
msgid ""
"Here is the help auto-generated from the docstrings of all the available "
"Magics function that IPython ships with."
msgstr ""

#: ../../source/interactive/magics.rst:18
msgid ""
"You can create an register your own Magics with IPython. You can find "
"many user defined Magics on `PyPI <https://pypi.io>`_. Feel free to "
"publish your own and use the ``Framework :: IPython`` trove classifier."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2
msgid "Line magics"
msgstr ""

#: ../../source/interactive/magics-generated.txt:6
msgid "Define an alias for a system command."
msgstr ""

#: ../../source/interactive/magics-generated.txt:8
msgid "'%alias alias_name cmd' defines 'alias_name' as an alias for 'cmd'"
msgstr ""

#: ../../source/interactive/magics-generated.txt:10
msgid ""
"Then, typing 'alias_name params' will execute the system command 'cmd "
"params' (from your underlying operating system)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:13
msgid ""
"Aliases have lower precedence than magic functions and Python normal "
"variables, so if 'foo' is both a Python variable and an alias, the alias "
"can not be executed until 'del foo' removes the Python variable."
msgstr ""

#: ../../source/interactive/magics-generated.txt:17
msgid ""
"You can use the %l specifier in an alias definition to represent the "
"whole line when the alias is called.  For example::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:24
#, python-format
msgid ""
"You can also define aliases with parameters using %s specifiers (one per "
"parameter)::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:34
#, python-format
msgid ""
"Note that %l and %s are mutually exclusive.  You can only use one or the "
"other in your aliases."
msgstr ""

#: ../../source/interactive/magics-generated.txt:37
msgid ""
"Aliases expand Python variables just like system calls using ! or !! do: "
"all expressions prefixed with '$' get expanded.  For details of the "
"semantic rules, see PEP-215: http://www.python.org/peps/pep-0215.html.  "
"This is the library used by IPython for variable expansion.  If you want "
"to access a true shell variable, an extra $ is necessary to prevent its "
"expansion by IPython::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:52
#, python-format
msgid ""
"You can use the alias facility to acess all of $PATH.  See the %rehashx "
"function, which automatically creates aliases for the contents of your "
"$PATH."
msgstr ""

#: ../../source/interactive/magics-generated.txt:56
msgid "If called with no parameters, %alias prints the current alias table."
msgstr ""

#: ../../source/interactive/magics-generated.txt:64
msgid "Create an alias for an existing line or cell magic."
msgstr ""

#: ../../source/interactive/magics-generated.txt:66
#: ../../source/interactive/magics-generated.txt:212
#: ../../source/interactive/magics-generated.txt:227
#: ../../source/interactive/magics-generated.txt:248
#: ../../source/interactive/magics-generated.txt:596
#: ../../source/interactive/magics-generated.txt:881
#: ../../source/interactive/magics-generated.txt:981
#: ../../source/interactive/magics-generated.txt:1039
#: ../../source/interactive/magics-generated.txt:1250
#: ../../source/interactive/magics-generated.txt:1284
#: ../../source/interactive/magics-generated.txt:1449
#: ../../source/interactive/magics-generated.txt:1496
#: ../../source/interactive/magics-generated.txt:1920
#: ../../source/interactive/magics-generated.txt:2000
#: ../../source/interactive/magics-generated.txt:2066
#: ../../source/interactive/magics-generated.txt:2091
#: ../../source/interactive/magics-generated.txt:2125
#: ../../source/interactive/magics-generated.txt:2276
msgid "Examples"
msgstr ""

#: ../../source/interactive/magics-generated.txt:92
#: ../../source/interactive/magics-generated.txt:331
#: ../../source/interactive/magics-generated.txt:606
#: ../../source/interactive/magics-generated.txt:908
#: ../../source/interactive/magics-generated.txt:927
#: ../../source/interactive/magics-generated.txt:1342
#: ../../source/interactive/magics-generated.txt:2185
#: ../../source/interactive/magics-generated.txt:2323
msgid "positional arguments:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:91
msgid ""
"name        Name of the magic to be created. target      Name of the "
"existing line or cell magic."
msgstr ""

#: ../../source/interactive/magics-generated.txt:95
#: ../../source/interactive/magics-generated.txt:334
#: ../../source/interactive/magics-generated.txt:640
#: ../../source/interactive/magics-generated.txt:910
#: ../../source/interactive/magics-generated.txt:1347
#: ../../source/interactive/magics-generated.txt:2189
#: ../../source/interactive/magics-generated.txt:2297
#: ../../source/interactive/magics-generated.txt:2326
msgid "optional arguments:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:95
msgid "Create a line magic alias."
msgstr ""

#: ../../source/interactive/magics-generated.txt:96
msgid "Create a cell magic alias."
msgstr ""

#: ../../source/interactive/magics-generated.txt:100
msgid "Make functions callable without having to type parentheses."
msgstr ""

#: ../../source/interactive/magics-generated.txt:102
#: ../../source/interactive/magics-generated.txt:188
#: ../../source/interactive/magics-generated.txt:386
msgid "Usage:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:104
msgid "%autocall [mode]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:106
msgid ""
"The mode can be one of: 0->Off, 1->Smart, 2->Full.  If not given, the "
"value is toggled on and off (remembering the previous state)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:109
msgid "In more detail, these values mean:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:111
msgid "0 -> fully disabled"
msgstr ""

#: ../../source/interactive/magics-generated.txt:113
msgid "1 -> active, but do not apply if there are no arguments on the line."
msgstr ""

#: ../../source/interactive/magics-generated.txt:115
msgid "In this mode, you get::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:124
msgid ""
"2 -> Active always.  Even if no arguments are present, the callable "
"object is called::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:131
msgid ""
"Note that even with autocall off, you can still use '/' at the start of a"
" line to treat the first argument on the command line as a function and "
"add parentheses to it::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:139
msgid "# all-random (note for auto-testing)"
msgstr ""

#: ../../source/interactive/magics-generated.txt:143
msgid "Make magic functions callable without having to type the initial %."
msgstr ""

#: ../../source/interactive/magics-generated.txt:145
msgid ""
"Without argumentsl toggles on/off (when off, you must call it as "
"%automagic, of course).  With arguments it sets the value, and you can "
"use any of (case insensitive):"
msgstr ""

#: ../../source/interactive/magics-generated.txt:149
msgid "on, 1, True: to activate"
msgstr ""

#: ../../source/interactive/magics-generated.txt:151
msgid "off, 0, False: to deactivate."
msgstr ""

#: ../../source/interactive/magics-generated.txt:153
msgid ""
"Note that magic functions have lowest priority, so if there's a variable "
"whose name collides with that of a magic fn, automagic won't work for "
"that function (you get the variable instead). However, if you delete the "
"variable (del var), the previously shadowed magic function becomes "
"visible to automagic again."
msgstr ""

#: ../../source/interactive/magics-generated.txt:161
msgid "Manage IPython's bookmark system."
msgstr ""

#: ../../source/interactive/magics-generated.txt:163
msgid ""
"%bookmark <name>       - set bookmark to current dir %bookmark <name> "
"<dir> - set bookmark to <dir> %bookmark -l           - list all bookmarks"
" %bookmark -d <name>    - remove bookmark %bookmark -r           - remove"
" all bookmarks"
msgstr ""

#: ../../source/interactive/magics-generated.txt:169
msgid "You can later on access a bookmarked folder with::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:173
#, python-format
msgid ""
"or simply '%cd <name>' if there is no directory called <name> AND there "
"is such a bookmark defined."
msgstr ""

#: ../../source/interactive/magics-generated.txt:176
msgid ""
"Your bookmarks persist through IPython sessions, but they are associated "
"with each profile."
msgstr ""

#: ../../source/interactive/magics-generated.txt:181
msgid "Change the current working directory."
msgstr ""

#: ../../source/interactive/magics-generated.txt:183
#, python-format
msgid ""
"This command automatically maintains an internal list of directories you "
"visit during your IPython session, in the variable _dh. The command "
"%dhist shows this history nicely formatted. You can also do 'cd -<tab>' "
"to see directory history conveniently."
msgstr ""

#: ../../source/interactive/magics-generated.txt:190
msgid "cd 'dir': changes to directory 'dir'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:192
msgid "cd -: changes to the last visited directory."
msgstr ""

#: ../../source/interactive/magics-generated.txt:194
msgid "cd -<n>: changes to the n-th directory in the directory history."
msgstr ""

#: ../../source/interactive/magics-generated.txt:196
msgid "cd --foo: change to directory that matches 'foo' in history"
msgstr ""

#: ../../source/interactive/magics-generated.txt:201
msgid "cd -b <bookmark_name>: jump to a bookmark set by %bookmark"
msgstr ""

#: ../../source/interactive/magics-generated.txt:201
msgid "(note: cd <bookmark_name> is enough if there is no"
msgstr ""

#: ../../source/interactive/magics-generated.txt:200
msgid ""
"directory <bookmark_name>, but a bookmark with the name exists.) 'cd -b "
"<tab>' allows you to tab-complete bookmark names."
msgstr ""

#: ../../source/interactive/magics-generated.txt:203
#: ../../source/interactive/magics-generated.txt:408
#: ../../source/interactive/magics-generated.txt:657
#: ../../source/interactive/magics-generated.txt:742
#: ../../source/interactive/magics-generated.txt:791
#: ../../source/interactive/magics-generated.txt:938
#: ../../source/interactive/magics-generated.txt:952
#: ../../source/interactive/magics-generated.txt:1103
#: ../../source/interactive/magics-generated.txt:1224
#: ../../source/interactive/magics-generated.txt:1414
#: ../../source/interactive/magics-generated.txt:1574
#: ../../source/interactive/magics-generated.txt:1689
#: ../../source/interactive/magics-generated.txt:1737
msgid "Options:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:205
msgid ""
"-q: quiet.  Do not print the working directory after the cd command is "
"executed.  By default IPython's cd command does print this directory, "
"since the default prompts do not display path information."
msgstr ""

#: ../../source/interactive/magics-generated.txt:209
msgid ""
"Note that !cd doesn't work for this purpose because the shell where "
"!command runs is immediately discarded after executing 'command'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:221
msgid "Switch color scheme for prompts, info system and exception handlers."
msgstr ""

#: ../../source/interactive/magics-generated.txt:223
msgid "Currently implemented schemes: NoColor, Linux, LightBG."
msgstr ""

#: ../../source/interactive/magics-generated.txt:225
msgid "Color scheme names are not case-sensitive."
msgstr ""

#: ../../source/interactive/magics-generated.txt:229
msgid "To get a plain black and white terminal::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:235
msgid "configure IPython"
msgstr ""

#: ../../source/interactive/magics-generated.txt:237
#, python-format
msgid "%config Class[.trait=value]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:239
msgid ""
"This magic exposes most of the IPython config system. Any Configurable "
"class should be able to be configured with the simple line::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:245
msgid ""
"Where `value` will be resolved in the user's namespace, if it is an "
"expression or variable name."
msgstr ""

#: ../../source/interactive/magics-generated.txt:251
msgid "To see what classes are available for config, pass no arguments::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:262
msgid "To view what is configurable on a given class, just pass the class name::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:294
msgid "but the real use is in setting values::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:298
msgid "and these values are read from the user_ns if they are variables::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:310
msgid "Activate the interactive debugger."
msgstr ""

#: ../../source/interactive/magics-generated.txt:312
msgid ""
"This magic command support two ways of activating debugger. One is to "
"activate debugger before executing code.  This way, you can set a break "
"point, to step through the code from the point. You can use this mode by "
"giving statements to execute and optionally a breakpoint."
msgstr ""

#: ../../source/interactive/magics-generated.txt:318
#, python-format
msgid ""
"The other one is to activate debugger in post-mortem mode.  You can "
"activate this mode simply running %debug without any argument. If an "
"exception has just occurred, this lets you inspect its stack frames "
"interactively.  Note that this will always work only on the last "
"traceback that occurred, so you must call this quickly after an exception"
" that you wish to inspect has fired, because if another one occurs, it "
"clobbers the previous one."
msgstr ""

#: ../../source/interactive/magics-generated.txt:326
msgid ""
"If you want IPython to automatically do this on every exception, see the "
"%pdb magic for more details."
msgstr ""

#: ../../source/interactive/magics-generated.txt:331
msgid "statement             Code to run in debugger. You can omit this in cell"
msgstr ""

#: ../../source/interactive/magics-generated.txt:331
msgid "magic mode."
msgstr ""

#: ../../source/interactive/magics-generated.txt:335
msgid "Set break point at LINE in FILE."
msgstr ""

#: ../../source/interactive/magics-generated.txt:339
msgid "Print your history of visited directories."
msgstr ""

#: ../../source/interactive/magics-generated.txt:341
#, python-format
msgid ""
"%dhist       -> print full history\\ %dhist n     -> print last n entries"
" only\\ %dhist n1 n2 -> print entries between n1 and n2 (n2 not "
"included)\\"
msgstr ""

#: ../../source/interactive/magics-generated.txt:345
#, python-format
msgid ""
"This history is automatically maintained by the %cd command, and always "
"available as the global list variable _dh. You can use %cd -<n> to go to "
"directory number <n>."
msgstr ""

#: ../../source/interactive/magics-generated.txt:349
msgid ""
"Note that most of time, you should view directory history by entering cd "
"-<TAB>."
msgstr ""

#: ../../source/interactive/magics-generated.txt:354
msgid "Return the current directory stack."
msgstr ""

#: ../../source/interactive/magics-generated.txt:358
msgid "Toggle doctest mode on and off."
msgstr ""

#: ../../source/interactive/magics-generated.txt:360
msgid ""
"This mode is intended to make IPython behave as much as possible like a "
"plain Python shell, from the perspective of how its prompts, exceptions "
"and output look.  This makes it easy to copy and paste parts of a session"
" into doctests.  It does so by:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:365
msgid "Changing the prompts to the classic ``>>>`` ones."
msgstr ""

#: ../../source/interactive/magics-generated.txt:366
msgid "Changing the exception reporting mode to 'Plain'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:367
msgid "Disabling pretty-printing of output."
msgstr ""

#: ../../source/interactive/magics-generated.txt:369
#, python-format
msgid ""
"Note that IPython also supports the pasting of code snippets that have "
"leading '>>>' and '...' prompts in them.  This means that you can paste "
"doctests from files or docstrings (even if they have leading whitespace),"
" and the code will execute correctly.  You can then use '%history -t' to "
"see the translated history; this will give you the input after removal of"
" all the leading prompts and whitespace, which can be pasted back into an"
" editor."
msgstr ""

#: ../../source/interactive/magics-generated.txt:377
msgid ""
"With these features, you can switch into this mode easily whenever you "
"need to do testing and changes to doctests, without having to leave your "
"existing IPython session."
msgstr ""

#: ../../source/interactive/magics-generated.txt:383
msgid "Bring up an editor and execute the resulting code."
msgstr ""

#: ../../source/interactive/magics-generated.txt:386
#, python-format
msgid "%edit [options] [args]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:388
#, python-format
msgid ""
"%edit runs IPython's editor hook. The default version of this hook is set"
" to call the editor specified by your $EDITOR environment variable. If "
"this isn't found, it will default to vi under Linux/Unix and to notepad "
"under Windows. See the end of this docstring for how to change the editor"
" hook."
msgstr ""

#: ../../source/interactive/magics-generated.txt:394
msgid ""
"You can also set the value of this editor via the "
"``TerminalInteractiveShell.editor`` option in your configuration file. "
"This is useful if you wish to use a different editor from your typical "
"default with IPython (and for Windows users who typically don't set "
"environment variables)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:400
msgid ""
"This command allows you to conveniently edit multi-line code right in "
"your IPython session."
msgstr ""

#: ../../source/interactive/magics-generated.txt:403
#, python-format
msgid ""
"If called without arguments, %edit opens up an empty editor with a "
"temporary file and will execute the contents of this file when you close "
"it (don't forget to save it!)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:410
msgid ""
"-n <number>: open the editor at a specified line number.  By default, the"
" IPython editor hook uses the unix syntax 'editor +N filename', but you "
"can configure this by providing your own modified hook if your favorite "
"editor supports line-number specifications with a different syntax."
msgstr ""

#: ../../source/interactive/magics-generated.txt:416
msgid ""
"-p: this will call the editor with the same data as the previous time it "
"was used, regardless of how long ago (in your current session) it was."
msgstr ""

#: ../../source/interactive/magics-generated.txt:420
msgid ""
"-r: use 'raw' input.  This option only applies to input taken from the "
"user's history.  By default, the 'processed' history is used, so that "
"magics are loaded in their transformed version to valid Python.  If this "
"option is given, the raw input as typed as the command line is used "
"instead.  When you exit the editor, it will be executed by IPython's own "
"processor."
msgstr ""

#: ../../source/interactive/magics-generated.txt:427
#, python-format
msgid ""
"-x: do not execute the edited code immediately upon exit. This is mainly "
"useful if you are editing programs which need to be called with command "
"line arguments, which you can then do using %run."
msgstr ""

#: ../../source/interactive/magics-generated.txt:432
#: ../../source/interactive/magics-generated.txt:1204
msgid "Arguments:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:434
msgid "If arguments are given, the following possibilities exist:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:436
msgid ""
"If the argument is a filename, IPython will load that into the editor. It"
" will execute its contents with execfile() when you exit, loading any "
"code in the file into your interactive namespace."
msgstr ""

#: ../../source/interactive/magics-generated.txt:440
#, python-format
msgid ""
"The arguments are ranges of input history,  e.g. \"7 ~1/4-6\". The syntax"
" is the same as in the %history magic."
msgstr ""

#: ../../source/interactive/magics-generated.txt:443
msgid ""
"If the argument is a string variable, its contents are loaded into the "
"editor. You can thus edit any string which contains python code "
"(including the result of previous edits)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:447
#, python-format
msgid ""
"If the argument is the name of an object (other than a string), IPython "
"will try to locate the file where it was defined and open the editor at "
"the point where it is defined. You can use `%edit function` to load an "
"editor exactly at the point where 'function' is defined, edit it and have"
" the file be executed automatically."
msgstr ""

#: ../../source/interactive/magics-generated.txt:453
msgid ""
"If the object is a macro (see %macro for details), this opens up your "
"specified editor with a temporary file containing the macro's data. Upon "
"exit, the macro is reloaded with the contents of the file."
msgstr ""

#: ../../source/interactive/magics-generated.txt:457
msgid ""
"Note: opening at an exact line is only supported under Unix, and some "
"editors (like kedit and gedit up to Gnome 2.8) do not understand the "
"'+NUMBER' parameter necessary for this feature. Good editors like "
"(X)Emacs, vi, jed, pico and joe all do."
msgstr ""

#: ../../source/interactive/magics-generated.txt:462
#, python-format
msgid ""
"After executing your code, %edit will return as output the code you typed"
" in the editor (except when it was an existing file). This way you can "
"reload the code in further invocations of %edit as a variable, via "
"_<NUMBER> or Out[<NUMBER>], where <NUMBER> is the prompt number of the "
"output."
msgstr ""

#: ../../source/interactive/magics-generated.txt:468
#, python-format
msgid "Note that %edit is also available through the alias %ed."
msgstr ""

#: ../../source/interactive/magics-generated.txt:470
msgid ""
"This is an example of creating a simple function inside the editor and "
"then modifying it. First, start up the editor::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:478
msgid "We can then call the function foo()::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:483
msgid ""
"Now we edit foo.  IPython automatically loads the editor with the "
"(temporary) file where foo() was previously defined::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:489
msgid "And if we call foo() again we get the modified version::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:494
msgid ""
"Here is an example of how to edit a code snippet successive times. First "
"we call the editor::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:502
msgid "Now we call it again with the previous output (stored in _)::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:509
msgid "Now we call it with the output #8 (stored in _8, also as Out[8])::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:517
msgid "Changing the default editor hook:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:519
msgid ""
"If you wish to write your own editor hook, you can put it in a "
"configuration file which you load at startup time.  The default hook is "
"defined in the IPython.core.hooks module, and you can use that as a "
"starting example for further modifications.  That file also has general "
"instructions on how to set a new hook for use once you've defined it."
msgstr ""

#: ../../source/interactive/magics-generated.txt:528
msgid "Get, set, or list environment variables."
msgstr ""

#: ../../source/interactive/magics-generated.txt:530
#: ../../source/interactive/magics-generated.txt:655
#: ../../source/interactive/magics-generated.txt:789
#: ../../source/interactive/magics-generated.txt:947
#: ../../source/interactive/magics-generated.txt:1277
#: ../../source/interactive/magics-generated.txt:1687
#: ../../source/interactive/magics-generated.txt:1808
msgid "Usage:\\"
msgstr ""

#: ../../source/interactive/magics-generated.txt:532
#, python-format
msgid ""
"%env: lists all environment variables/values %env var: get value for var "
"%env var val: set value for var %env var=val: set value for var %env "
"var=$val: set value for var, using python expansion if possible"
msgstr ""

#: ../../source/interactive/magics-generated.txt:540
msgid "Enable or disable IPython GUI event loop integration."
msgstr ""

#: ../../source/interactive/magics-generated.txt:542
#, python-format
msgid "%gui [GUINAME]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:544
msgid ""
"This magic replaces IPython's threaded shells that were activated using "
"the (pylab/wthread/etc.) command line flags.  GUI toolkits can now be "
"enabled at runtime and keyboard interrupts should work without any "
"problems.  The following toolkits are supported:  wxPython, PyQt4, PyGTK,"
" Tk and Cocoa (OSX)::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:560
msgid ""
"WARNING:  after any of these has been called you can simply create an "
"application object, but DO NOT start the event loop yourself, as we have "
"already handled that."
msgstr ""

#: ../../source/interactive/magics-generated.txt:572
msgid "Print input history (_i<n> variables), with most recent last."
msgstr ""

#: ../../source/interactive/magics-generated.txt:574
msgid ""
"By default, input history is printed without line numbers so it can be "
"directly pasted into an editor. Use -n to show them."
msgstr ""

#: ../../source/interactive/magics-generated.txt:577
msgid ""
"By default, all input history from the current session is displayed. "
"Ranges of history can be indicated using the syntax:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:580
msgid "``4``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:581
msgid "Line 4, current session"
msgstr ""

#: ../../source/interactive/magics-generated.txt:582
msgid "``4-6``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:583
msgid "Lines 4-6, current session"
msgstr ""

#: ../../source/interactive/magics-generated.txt:584
msgid "``243/1-5``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:585
msgid "Lines 1-5, session 243"
msgstr ""

#: ../../source/interactive/magics-generated.txt:586
msgid "``~2/7``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:587
msgid "Line 7, session 2 before current"
msgstr ""

#: ../../source/interactive/magics-generated.txt:590
msgid "``~8/1-~6/5``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:589
msgid ""
"From the first line of 8 sessions ago, to the fifth line of 6 sessions "
"ago."
msgstr ""

#: ../../source/interactive/magics-generated.txt:592
msgid "Multiple ranges can be entered, separated by spaces"
msgstr ""

#: ../../source/interactive/magics-generated.txt:594
#, python-format
msgid "The same syntax is used by %macro, %save, %edit, %rerun"
msgstr ""

#: ../../source/interactive/magics-generated.txt:606
msgid "range"
msgstr ""

#: ../../source/interactive/magics-generated.txt:609
msgid ""
"print line numbers for each input. This feature is only available if "
"numbered prompts are in use."
msgstr ""

#: ../../source/interactive/magics-generated.txt:611
msgid "also print outputs for each input."
msgstr ""

#: ../../source/interactive/magics-generated.txt:612
msgid ""
"print classic '>>>' python prompts before each input. This is useful for "
"making documentation, and in conjunction with -o, for producing doctest-"
"ready output."
msgstr ""

#: ../../source/interactive/magics-generated.txt:616
#, python-format
msgid ""
"print the 'translated' history, as IPython understands it. IPython "
"filters your input and converts it all into valid Python source before "
"executing it (things like magics or aliases are turned into function "
"calls, for example). With this option, you'll see the native history "
"instead of the user-entered version: '%cd /' will be seen as "
"'get_ipython().magic(\"%cd /\")' instead of '%cd /'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:624
msgid ""
"FILENAME: instead of printing the output to the screen, redirect it to "
"the given file. The file is always overwritten, though *when it can*, "
"IPython asks for confirmation first. In particular, running the command "
"'history -f FILENAME' from the IPython Notebook interface will replace "
"FILENAME even if it already exists *without* confirmation."
msgstr ""

#: ../../source/interactive/magics-generated.txt:632
#, python-format
msgid ""
"treat the arg as a glob pattern to search for in (full) history. This "
"includes the saved history (almost all commands ever written). The "
"pattern may contain '?' to match one unknown character and '*' to match "
"any number of unknown characters. Use '%hist -g' to show full saved "
"history (may be very long)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:638
msgid ""
"get the last n lines from all sessions. Specify n as a single arg, or the"
" default is the last 10 lines."
msgstr ""

#: ../../source/interactive/magics-generated.txt:640
msgid "when searching history using `-g`, show only unique history."
msgstr ""

#: ../../source/interactive/magics-generated.txt:645
#, python-format
msgid "Kill all BG processes started by %%script and its family."
msgstr ""

#: ../../source/interactive/magics-generated.txt:649
msgid "Load code into the current frontend."
msgstr ""

#: ../../source/interactive/magics-generated.txt:652
#, python-format
msgid "%load [options] source"
msgstr ""

#: ../../source/interactive/magics-generated.txt:654
msgid ""
"where source can be a filename, URL, input history range, macro, or "
"element in the user namespace"
msgstr ""

#: ../../source/interactive/magics-generated.txt:659
msgid ""
"-r <lines>: Specify lines or ranges of lines to load from the source. "
"Ranges could be specified as x-y (x..y) or in python-style x:y "
"(x..(y-1)). Both limits x and y can be left blank (meaning the beginning "
"and end of the file, respectively)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:664
msgid "-s <symbols>: Specify function or classes to load from python source."
msgstr ""

#: ../../source/interactive/magics-generated.txt:666
msgid "-y : Don't ask confirmation for loading source above 200 000 characters."
msgstr ""

#: ../../source/interactive/magics-generated.txt:668
msgid "-n : Include the user's namespace when searching for source code."
msgstr ""

#: ../../source/interactive/magics-generated.txt:670
#, python-format
msgid ""
"This magic command can either take a local filename, a URL, an history "
"range (see %history) or a macro as argument, it will prompt for "
"confirmation before loading source with more than 200 000 characters, "
"unless -y flag is passed or if the frontend does not support raw_input::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:687
msgid "Load an IPython extension by its module name."
msgstr ""

#: ../../source/interactive/magics-generated.txt:691
#, python-format
msgid "Alias of `%load`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:693
#, python-format
msgid ""
"`%loadpy` has gained some flexibility and dropped the requirement of a "
"`.py` extension. So it has been renamed simply into %load. You can look "
"at `%load`'s docstring for more info."
msgstr ""

#: ../../source/interactive/magics-generated.txt:699
msgid "Temporarily stop logging."
msgstr ""

#: ../../source/interactive/magics-generated.txt:701
msgid "You must have previously started logging."
msgstr ""

#: ../../source/interactive/magics-generated.txt:705
msgid "Restart logging."
msgstr ""

#: ../../source/interactive/magics-generated.txt:707
#, python-format
msgid ""
"This function is for restarting logging which you've temporarily stopped "
"with %logoff. For starting logging for the first time, you must use the "
"%logstart function, which allows you to specify an optional log filename."
msgstr ""

#: ../../source/interactive/magics-generated.txt:714
msgid "Start logging anywhere in a session."
msgstr ""

#: ../../source/interactive/magics-generated.txt:716
#, python-format
msgid "%logstart [-o|-r|-t] [log_name [log_mode]]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:718
msgid ""
"If no name is given, it defaults to a file named 'ipython_log.py' in your"
" current directory, in 'rotate' mode (see below)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:721
#, python-format
msgid ""
"'%logstart name' saves to file 'name' in 'backup' mode.  It saves your "
"history up to that point and then continues logging."
msgstr ""

#: ../../source/interactive/magics-generated.txt:724
#, python-format
msgid ""
"%logstart takes a second optional parameter: logging mode. This can be "
"one of (note that the modes are given unquoted):"
msgstr ""

#: ../../source/interactive/magics-generated.txt:728
msgid "append"
msgstr ""

#: ../../source/interactive/magics-generated.txt:728
msgid "Keep logging at the end of any existing file."
msgstr ""

#: ../../source/interactive/magics-generated.txt:731
msgid "backup"
msgstr ""

#: ../../source/interactive/magics-generated.txt:731
msgid "Rename any existing file to name~ and start name."
msgstr ""

#: ../../source/interactive/magics-generated.txt:734
msgid "global"
msgstr ""

#: ../../source/interactive/magics-generated.txt:734
msgid "Append to  a single logfile in your home directory."
msgstr ""

#: ../../source/interactive/magics-generated.txt:737
msgid "over"
msgstr ""

#: ../../source/interactive/magics-generated.txt:737
msgid "Overwrite any existing log."
msgstr ""

#: ../../source/interactive/magics-generated.txt:740
msgid "rotate"
msgstr ""

#: ../../source/interactive/magics-generated.txt:740
msgid "Create rotating logs: name.1~, name.2~, etc."
msgstr ""

#: ../../source/interactive/magics-generated.txt:745
msgid ""
"log also IPython's output. In this mode, all commands which generate an "
"Out[NN] prompt are recorded to the logfile, right after their "
"corresponding input line. The output lines are always prepended with a "
"'#[Out]# ' marker, so that the log remains valid Python code."
msgstr ""

#: ../../source/interactive/magics-generated.txt:751
msgid ""
"Since this marker is always the same, filtering only the output from a "
"log is very easy, using for example a simple awk call::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:757
#, python-format
msgid ""
"log 'raw' input.  Normally, IPython's logs contain the processed input, "
"so that user lines are logged in their final form, converted into valid "
"Python.  For example, %Exit is logged as _ip.magic(\"Exit\").  If the -r "
"flag is given, all input is logged exactly as typed, with no "
"transformations applied."
msgstr ""

#: ../../source/interactive/magics-generated.txt:764
msgid "put timestamps before each input line logged (these are put in comments)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:769
msgid "Print the status of the logging system."
msgstr ""

#: ../../source/interactive/magics-generated.txt:773
msgid "Fully stop logging and close log file."
msgstr ""

#: ../../source/interactive/magics-generated.txt:775
#, python-format
msgid ""
"In order to start logging again, a new %logstart call needs to be made, "
"possibly (though not necessarily) with a new filename, mode and other "
"options."
msgstr ""

#: ../../source/interactive/magics-generated.txt:781
msgid "List currently available magic functions."
msgstr ""

#: ../../source/interactive/magics-generated.txt:785
msgid ""
"Define a macro for future re-execution. It accepts ranges of history, "
"filenames or string objects."
msgstr ""

#: ../../source/interactive/magics-generated.txt:789
msgid "%macro [options] name n1-n2 n3-n4 ... n5 .. n6 ..."
msgstr ""

#: ../../source/interactive/magics-generated.txt:793
msgid ""
"-r: use 'raw' input.  By default, the 'processed' history is used, so "
"that magics are loaded in their transformed version to valid Python.  If "
"this option is given, the raw input as typed at the command line is used "
"instead."
msgstr ""

#: ../../source/interactive/magics-generated.txt:798
msgid ""
"-q: quiet macro definition.  By default, a tag line is printed to "
"indicate the macro has been created, and then the contents of the macro "
"are printed.  If this option is given, then no printout is produced once "
"the macro is created."
msgstr ""

#: ../../source/interactive/magics-generated.txt:803
msgid ""
"This will define a global variable called `name` which is a string made "
"of joining the slices and lines you specify (n1,n2,... numbers above) "
"from your input history into a single string. This variable acts like an "
"automatic function which re-executes those lines as if you had typed "
"them. You just type 'name' at the prompt and the code executes."
msgstr ""

#: ../../source/interactive/magics-generated.txt:810
#, python-format
msgid "The syntax for indicating input ranges is described in %history."
msgstr ""

#: ../../source/interactive/magics-generated.txt:812
msgid ""
"Note: as a 'hidden' feature, you can also use traditional python slice "
"notation, where N:M means numbers N through M-1."
msgstr ""

#: ../../source/interactive/magics-generated.txt:815
#, python-format
msgid "For example, if your history contains (print using %hist -n )::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:824
msgid ""
"you can create a macro with lines 44 through 47 (included) and line 49 "
"called my_macro with::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:829
msgid ""
"Now, typing `my_macro` (without quotes) will re-execute all this code in "
"one pass."
msgstr ""

#: ../../source/interactive/magics-generated.txt:832
msgid ""
"You don't need to give the line-numbers in order, and any given line "
"number can appear multiple times. You can assemble macros with any lines "
"from your input history in any order."
msgstr ""

#: ../../source/interactive/magics-generated.txt:836
msgid ""
"The macro is a simple object which holds its value in an attribute, but "
"IPython's display system checks for macros and executes them as code "
"instead of printing them when you type their name."
msgstr ""

#: ../../source/interactive/magics-generated.txt:840
msgid "You can view a macro's contents by explicitly printing it with::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:846
msgid "Print information about the magic function system."
msgstr ""

#: ../../source/interactive/magics-generated.txt:848
msgid "Supported formats: -latex, -brief, -rest"
msgstr ""

#: ../../source/interactive/magics-generated.txt:856
msgid "Set up matplotlib to work interactively."
msgstr ""

#: ../../source/interactive/magics-generated.txt:858
msgid ""
"This function lets you activate matplotlib interactive support at any "
"point during an IPython session. It does not import anything into the "
"interactive namespace."
msgstr ""

#: ../../source/interactive/magics-generated.txt:862
msgid ""
"If you are using the inline matplotlib backend in the IPython Notebook "
"you can set which figure formats are enabled using the following::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:869
#, python-format
msgid ""
"The default for inline figures sets `bbox_inches` to 'tight'. This can "
"cause discrepancies between the displayed image and the identical image "
"created using `savefig`. This behavior can be disabled using the "
"`%config` magic::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:876
msgid ""
"In addition, see the docstring of "
"`IPython.display.set_matplotlib_formats` and "
"`IPython.display.set_matplotlib_close` for more information on changing "
"additional behaviors of the inline backend."
msgstr ""

#: ../../source/interactive/magics-generated.txt:883
msgid "To enable the inline backend for usage with the IPython Notebook::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:887
msgid "In this case, where the matplotlib default is TkAgg::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:892
msgid "But you can explicitly request a different GUI backend::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:896
msgid "You can list the available backends using the -l/--list option::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:908
msgid "gui         Name of the matplotlib backend to use ('agg', 'gtk', 'gtk3',"
msgstr ""

#: ../../source/interactive/magics-generated.txt:904
msgid ""
"'inline', 'ipympl', 'nbagg', 'notebook', 'osx', 'pdf', 'ps', 'qt', 'qt4',"
" 'qt5', 'svg', 'tk', 'widget', 'wx'). If given, the corresponding "
"matplotlib backend is used, otherwise it will be matplotlib's default "
"(which you can set in your matplotlib config file)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:911
msgid "Show available matplotlib backends"
msgstr ""

#: ../../source/interactive/magics-generated.txt:919
msgid "Export and convert IPython notebooks."
msgstr ""

#: ../../source/interactive/magics-generated.txt:921
msgid ""
"This function can export the current IPython history to a notebook file. "
"For example, to export the history to \"foo.ipynb\" do \"%notebook "
"foo.ipynb\"."
msgstr ""

#: ../../source/interactive/magics-generated.txt:924
msgid ""
"The -e or --export flag is deprecated in IPython 5.2, and will be removed"
" in the future."
msgstr ""

#: ../../source/interactive/magics-generated.txt:928
msgid "filename  Notebook name or filename"
msgstr ""

#: ../../source/interactive/magics-generated.txt:932
msgid "Pretty print the object and display it through a pager."
msgstr ""

#: ../../source/interactive/magics-generated.txt:934
msgid "%page [options] OBJECT"
msgstr ""

#: ../../source/interactive/magics-generated.txt:936
msgid "If no object is given, use _ (last output)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:940
msgid "-r: page str(object), don't pretty-print it."
msgstr ""

#: ../../source/interactive/magics-generated.txt:944
msgid "Upload code to Github's Gist paste bin, returning the URL."
msgstr ""

#: ../../source/interactive/magics-generated.txt:947
msgid "%pastebin [-d \"Custom description\"] 1-7"
msgstr ""

#: ../../source/interactive/magics-generated.txt:949
msgid ""
"The argument can be an input history range, a filename, or the name of a "
"string or macro."
msgstr ""

#: ../../source/interactive/magics-generated.txt:954
msgid "-d: Pass a custom description for the gist. The default will say"
msgstr ""

#: ../../source/interactive/magics-generated.txt:955
msgid "\"Pasted from IPython\"."
msgstr ""

#: ../../source/interactive/magics-generated.txt:959
msgid "Control the automatic calling of the pdb interactive debugger."
msgstr ""

#: ../../source/interactive/magics-generated.txt:961
msgid ""
"Call as '%pdb on', '%pdb 1', '%pdb off' or '%pdb 0'. If called without "
"argument it works as a toggle."
msgstr ""

#: ../../source/interactive/magics-generated.txt:964
msgid ""
"When an exception is triggered, IPython can optionally call the "
"interactive pdb debugger after the traceback printout. %pdb toggles this "
"feature on and off."
msgstr ""

#: ../../source/interactive/magics-generated.txt:968
msgid ""
"The initial state of this feature is set in your configuration file (the "
"option is ``InteractiveShell.pdb``)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:971
#, python-format
msgid ""
"If you want to just activate the debugger AFTER an exception has fired, "
"without having to type '%pdb on' and rerunning your code, you can use the"
" %debug magic."
msgstr ""

#: ../../source/interactive/magics-generated.txt:977
msgid "Print the call signature for any callable object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:979
msgid "If the object is a class, print the constructor information."
msgstr ""

#: ../../source/interactive/magics-generated.txt:990
msgid "Print the docstring for an object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:992
msgid ""
"If the given object is a class, it will print both the class and the "
"constructor docstrings."
msgstr ""

#: ../../source/interactive/magics-generated.txt:997
msgid "Print (or run through pager) the file where an object is defined."
msgstr ""

#: ../../source/interactive/magics-generated.txt:999
msgid ""
"The file opens at the line where the object definition begins. IPython "
"will honor the environment variable PAGER if set, and otherwise will do "
"its best to print the file in a convenient form."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1003
msgid ""
"If the given argument is not an object currently defined, IPython will "
"try to interpret it as a filename (automatically adding a .py extension "
"if needed). You can thus use %pfile as a syntax highlighting code viewer."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1010
msgid "Provide detailed information about an object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1012
msgid "'%pinfo object' is just a synonym for object? or ?object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1016
msgid "Provide extra detailed information about an object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1018
msgid "'%pinfo2 object' is just a synonym for object?? or ??object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1022
msgid "Change to directory popped off the top of the stack."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1026
msgid "Toggle pretty printing on/off."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1030
msgid "Set floating point precision for pretty printing."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1032
msgid "Can set either integer precision or a format string."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1034
msgid ""
"If numpy has been imported and precision is an int, numpy display "
"precision will also be set, via ``numpy.set_printoptions``."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1037
msgid "If no argument is given, defaults will be restored."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1071
msgid "DEPRECATED since IPython 2.0."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1073
msgid "Raise `UsageError`. To profile code use the :magic:`prun` magic."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1076
#: ../../source/interactive/magics-generated.txt:1445
#: ../../source/interactive/magics-generated.txt:1492
msgid "See Also"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1078
msgid "prun : run code using the Python profiler (:magic:`prun`)"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1082
msgid "Run a statement through the python code profiler."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1085
#: ../../source/interactive/magics-generated.txt:1960
msgid "Usage, in line mode:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1085
msgid "%prun [options] statement"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1090
msgid "Usage, in cell mode:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1088
#, python-format
msgid "%%prun [options] [statement] code... code..."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1092
msgid ""
"In cell mode, the additional code lines are appended to the (possibly "
"empty) statement in the first line.  Cell mode allows you to easily "
"profile multiline blocks without having to put them in a separate "
"function."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1097
msgid ""
"The given statement (which doesn't require quote marks) is run via the "
"python profiler in a manner similar to the profile.run() function. "
"Namespaces are internally managed to work correctly; profile.run cannot "
"be used in IPython because it makes certain assumptions about namespaces "
"which do not hold under IPython."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1106
msgid ""
"you can place restrictions on what or how much of the profile gets "
"printed. The limit value can be:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1109
msgid ""
"A string: only information for function names containing this string is "
"printed."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1112
msgid "An integer: only these many lines are printed."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1114
#, python-format
msgid ""
"A float (between 0 and 1): this fraction of the report is printed (for "
"example, use a limit of 0.4 to see the topmost 40% only)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1117
msgid ""
"You can combine several limits with repeated use of the option. For "
"example, ``-l __init__ -l 5`` will print only the topmost 5 lines of "
"information about class constructors."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1122
msgid ""
"return the pstats.Stats object generated by the profiling. This object "
"has all the information about the profile in it, and you can later use it"
" for further analysis or in other functions."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1127
msgid ""
"sort profile by given key. You can provide more than one key by using the"
" option several times: '-s key1 -s key2 -s key3...'. The default sorting "
"key is 'time'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1131
msgid ""
"The following is copied verbatim from the profile documentation "
"referenced below:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1134
msgid ""
"When more than one key is provided, additional keys are used as secondary"
" criteria when the there is equality in all keys selected before them."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1138
msgid ""
"Abbreviations can be used for any key names, as long as the abbreviation "
"is unambiguous.  The following are the keys currently defined:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1143
msgid "Valid Arg"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1143
msgid "Meaning"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1145
msgid "\"calls\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1145
msgid "call count"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1146
msgid "\"cumulative\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1146
msgid "cumulative time"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1147
msgid "\"file\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1147
#: ../../source/interactive/magics-generated.txt:1148
msgid "file name"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1148
msgid "\"module\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1149
msgid "\"pcalls\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1149
msgid "primitive call count"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1150
msgid "\"line\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1150
msgid "line number"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1151
msgid "\"name\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1151
msgid "function name"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1152
msgid "\"nfl\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1152
msgid "name/file/line"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1153
msgid "\"stdname\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1153
msgid "standard name"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1154
msgid "\"time\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1154
msgid "internal time"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1157
msgid ""
"Note that all sorts on statistics are in descending order (placing most "
"time consuming items first), where as name, file, and line number "
"searches are in ascending order (i.e., alphabetical). The subtle "
"distinction between \"nfl\" and \"stdname\" is that the standard name is "
"a sort of the name as printed, which means that the embedded line numbers"
" get compared in an odd way.  For example, lines 3, 20, and 40 would (if "
"the file names were the same) appear in the string order \"20\" \"3\" and"
" \"40\".  In contrast, \"nfl\" does a numeric compare of the line "
"numbers.  In fact, sort_stats(\"nfl\") is the same as "
"sort_stats(\"name\", \"file\", \"line\")."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1169
msgid ""
"save profile results as shown on screen to a text file. The profile is "
"still shown on screen."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1173
msgid ""
"save (via dump_stats) profile statistics to given filename. This data is "
"in a format understood by the pstats module, and is generated by a call "
"to the dump_stats() method of profile objects. The profile is still shown"
" on screen."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1179
msgid "suppress output to the pager.  Best used with -T and/or -D above."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1181
#, python-format
msgid ""
"If you want to run complete programs under the profiler's control, use "
"``%run -p [prof_opts] filename.py [args to program]`` where prof_opts "
"contains profiler specific options as described here."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1185
msgid "You can read the complete documentation for the profile module with::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1191
msgid "Search for object in namespaces by wildcard."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1193
msgid "%psearch [options] PATTERN [OBJECT TYPE]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1195
msgid ""
"Note: ? can be used as a synonym for %psearch, at the beginning or at the"
" end: both a*? and ?a* are equivalent to '%psearch a*'.  Still, the rest "
"of the command line must be unchanged (options come first), so for "
"example the following forms are equivalent"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1200
msgid "%psearch -i a* function -i a* function? ?-i a* function"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1206
msgid "PATTERN"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1208
msgid ""
"where PATTERN is a string containing * as a wildcard similar to its use "
"in a shell.  The pattern is matched in all namespaces on the search path."
" By default objects starting with a single _ are not matched, many "
"IPython generated objects have a single underscore. The default is case "
"insensitive matching. Matching is also done on the attributes of objects "
"and not only on the objects in a module."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1216
msgid "[OBJECT TYPE]"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1218
msgid ""
"Is the name of a python type from the types module. The name is given in "
"lowercase without the ending type, ex. StringType is written string. By "
"adding a type here only objects matching the given type are matched. "
"Using all here makes the pattern match all types (this is the default)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1226
msgid ""
"-a: makes the pattern match even objects whose names start with a single "
"underscore.  These names are normally omitted from the search."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1230
msgid ""
"-i/-c: make the pattern case insensitive/sensitive.  If neither of these "
"options are given, the default is read from your configuration file, with"
" the option ``InteractiveShell.wildcards_case_sensitive``. If this option"
" is not specified in your configuration file, IPython's internal default "
"is to do a case sensitive search."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1236
msgid ""
"-e/-s NAMESPACE: exclude/search a given namespace.  The pattern you "
"specify can be searched in any of the following namespaces: 'builtin', "
"'user', 'user_global','internal', 'alias', where 'builtin' and 'user' are"
" the search defaults.  Note that you should not use quotes when "
"specifying namespaces."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1242
msgid ""
"'Builtin' contains the python module builtin, 'user' contains all user "
"data, 'alias' only contain the shell aliases and no python objects, "
"'internal' contains objects used by IPython.  The 'user_global' namespace"
" is only used by embedded IPython instances, and it contains module-level"
" globals.  You can add namespaces to the search with -s or exclude them "
"with -e (these options can be given more than once)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1261
msgid "Case sensitive search::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1265
msgid "Show objects beginning with a single _::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1271
msgid "Print (or run through pager) the source code for an object."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1275
msgid "Place the current dir on stack and change directory."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1278
msgid "%pushd ['dirname']"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1282
msgid "Return the current working directory path."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1293
msgid "Show a syntax-highlighted file through a pager."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1295
msgid ""
"This magic is similar to the cat utility, but it will assume the file to "
"be Python source and will show it with syntax highlighting."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1298
#, python-format
msgid ""
"This magic command can either take a local filename, an url, an history "
"range (see %history) or a macro as argument ::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1312
msgid "Load numpy and matplotlib to work interactively."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1314
msgid ""
"This function lets you activate pylab (matplotlib, numpy and interactive "
"support) at any point during an IPython session."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1317
msgid "%pylab makes the following imports::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1331
msgid "If you pass `--no-import-all`, the last two `*` imports will be excluded."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1333
msgid ""
"See the %matplotlib magic for more details about activating matplotlib "
"without affecting the interactive namespace."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1342
msgid "gui              Name of the matplotlib backend to use ('agg', 'gtk',"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1338
msgid ""
"'gtk3', 'inline', 'ipympl', 'nbagg', 'notebook', 'osx', 'pdf', 'ps', "
"'qt', 'qt4', 'qt5', 'svg', 'tk', 'widget', 'wx'). If given, the "
"corresponding matplotlib backend is used, otherwise it will be "
"matplotlib's default (which you can set in your matplotlib config file)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1345
msgid ""
"Prevent IPython from performing ``import *`` into the interactive "
"namespace. You can govern the default behavior of this flag with the "
"InteractiveShellApp.pylab_import_all configurable."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1352
msgid "Show a quick reference sheet"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1356
msgid "Repeat a command, or get command to input line for editing."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1358
#, python-format
msgid "%recall and %rep are equivalent."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1360
#, python-format
msgid "%recall (no arguments):"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1362
msgid ""
"Place a string version of last computation result (stored in the special "
"'_' variable) to the next input prompt. Allows you to create elaborate "
"command lines without using copy-paste::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1372
#, python-format
msgid "%recall 45"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1374
#, python-format
msgid ""
"Place history line 45 on the next input prompt. Use %hist to find out the"
" number."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1377
#, python-format
msgid "%recall 1-4"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1379
#, python-format
msgid ""
"Combine the specified lines into one cell, and place it on the next input"
" prompt. See %history for the slice syntax."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1382
#, python-format
msgid "%recall foo+bar"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1384
msgid ""
"If foo+bar can be evaluated in the user namespace, the result is placed "
"at the next input prompt. Otherwise, the history is searched for lines "
"which contain that substring, and the most recent one is placed at the "
"next input prompt."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1391
msgid "Update the alias table with all executable files in $PATH."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1393
msgid ""
"rehashx explicitly checks that every entry in $PATH is a file with "
"execute access (os.X_OK)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1396
msgid ""
"Under Windows, it checks executability as a match against a '|'-separated"
" string of extensions, stored in the IPython config variable "
"win_exec_ext.  This defaults to 'exe|com|bat'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1400
msgid ""
"This function also resets the root module cache of module completer, used"
" on slow filesystems."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1405
msgid "Reload an IPython extension by its module name."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1409
msgid "Re-run previous input"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1411
#, python-format
msgid ""
"By default, you can specify ranges of input history to be repeated (as "
"with %history). With no arguments, it will repeat the last line."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1416
msgid ""
"-l <n> : Repeat the last n lines of input, not including the current "
"command."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1419
msgid "-g foo : Repeat the most recent line which contains foo"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1423
msgid ""
"Resets the namespace by removing all names defined by the user, if called"
" without arguments, or by removing some types of objects, such as "
"everything currently in IPython's In[] and Out[] containers (see the "
"parameters for details)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1428
msgid "Parameters"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1430
#: ../../source/interactive/magics-generated.txt:1490
msgid "-f : force reset without asking for confirmation."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1435
msgid "-s"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1434
msgid "'Soft' reset: Only clears your namespace, leaving history intact."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1433
msgid ""
"References to objects may be kept. By default (without this option), we "
"do a 'hard' reset, giving you a new session and removing all references "
"to objects from the current session."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1437
msgid "in : reset input history"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1439
msgid "out : reset output history"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1441
msgid "dhist : reset directory history"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1443
msgid "array : reset only variables that are NumPy arrays"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1447
#, python-format
msgid "reset_selective : invoked as ``%reset_selective``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1473
#: ../../source/interactive/magics-generated.txt:1533
msgid "Notes"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1475
#: ../../source/interactive/magics-generated.txt:1535
msgid ""
"Calling this magic from clients that do not implement standard input, "
"such as the ipython notebook interface, will reset the namespace without "
"confirmation."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1481
msgid "Resets the namespace by removing names defined by the user."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1483
msgid "Input/Output history are left around in case you need them."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1485
#, python-format
msgid "%reset_selective [-f] regex"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1487
msgid "No action is taken if regex is not included"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1490
#: ../../source/interactive/magics-generated.txt:2149
msgid "Options"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1494
#, python-format
msgid "reset : invoked as ``%reset``"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1499
msgid ""
"We first fully reset the namespace so your output looks identical to this"
" example for pedagogical reasons; in practice you do not need a full "
"reset::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1505
#, python-format
msgid ""
"Now, with a clean namespace we can make a few variables and use "
"``%reset_selective`` to only delete names that match our regexp::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1541
msgid "Run the named file inside IPython as a program."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1543
msgid "Usage::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1549
msgid ""
"Parameters after the filename are passed as command-line arguments to the"
" program (put in sys.argv). Then, control returns to IPython's prompt."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1553
msgid ""
"This is similar to running at a system prompt ``python file args``, but "
"with the advantage of giving you IPython's tracebacks, and of loading all"
" variables into your interactive namespace for further use (unless -p is "
"used, see below)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1558
msgid ""
"The file is executed in a namespace initially consisting only of "
"``__name__=='__main__'`` and sys.argv constructed as indicated. It thus "
"sees its environment as if it were being run as a stand-alone program "
"(except for sharing global objects such as previously imported modules). "
"But after execution, the IPython interactive namespace gets updated with "
"all variables defined in the program (except for __name__ and sys.argv). "
"This allows for very convenient loading of code for interactive work, "
"while giving each program a 'clean sheet' to run in."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1567
msgid ""
"Arguments are expanded using shell-like glob match.  Patterns '*', '?', "
"'[seq]' and '[!seq]' can be used.  Additionally, tilde '~' will be "
"expanded into user's home directory.  Unlike real shells, quotation does "
"not suppress expansions.  Use *two* back slashes (e.g. ``\\\\*``) to "
"suppress expansions. To completely disable these expansions, you can use "
"-G flag."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1577
msgid ""
"__name__ is NOT set to '__main__', but to the running file's name without"
" extension (as python does under import).  This allows running scripts "
"and reloading the definitions in them without calling code protected by "
"an ``if __name__ == \"__main__\"`` clause."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1583
msgid ""
"run the file in IPython's namespace instead of an empty one. This is "
"useful if you are experimenting with code written in a text editor which "
"depends on variables defined interactively."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1588
msgid ""
"ignore sys.exit() calls or SystemExit exceptions in the script being run."
"  This is particularly useful if IPython is being used to run unittests, "
"which always exit with a sys.exit() call.  In such cases you are "
"interested in the output of the test results, not in seeing a traceback "
"of the unittest module."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1595
msgid ""
"print timing information at the end of the run.  IPython will give you an"
" estimated CPU time consumption for your script, which under Unix uses "
"the resource module to avoid the wraparound problems of time.clock().  "
"Under Unix, an estimate of time spent on system tasks is also given (for "
"Windows platforms this is reported as 0.0)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1601
msgid ""
"If -t is given, an additional ``-N<N>`` option can be given, where <N> "
"must be an integer indicating how many times you want the script to run."
"  The final timing report will include total and per run results."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1605
msgid "For example (testing the script uniq_stable.py)::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1622
msgid ""
"run your program under the control of pdb, the Python debugger. This "
"allows you to execute your program step by step, watch variables, etc.  "
"Internally, what IPython does is similar to calling::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1628
msgid ""
"with a breakpoint set on line 1 of your file.  You can change the line "
"number for this automatic breakpoint to be <N> by using the -bN option "
"(where N must be an integer). For example::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1634
msgid ""
"will set the first breakpoint at line 40 in myscript.py.  Note that the "
"first breakpoint must be set on a line which actually does something (not"
" a comment or docstring) for it to stop execution."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1638
msgid "Or you can specify a breakpoint in a different file::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1642
msgid ""
"When the pdb debugger starts, you will see a (Pdb) prompt.  You must "
"first enter 'c' (without quotes) to start execution up to the first "
"breakpoint."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1646
msgid ""
"Entering 'help' gives information about the use of the debugger.  You can"
" easily see pdb's full documentation with \"import pdb;pdb.help()\" at a "
"prompt."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1651
msgid ""
"run program under the control of the Python profiler module (which prints"
" a detailed report of execution times, function calls, etc)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1654
msgid ""
"You can pass other options after -p which affect the behavior of the "
"profiler itself. See the docs for %prun for details."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1657
msgid ""
"In this mode, the program's variables do NOT propagate back to the "
"IPython interactive namespace (because they remain in the namespace where"
" the profiler executes them)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1661
msgid ""
"Internally this triggers a call to %prun, see its documentation for "
"details on the options available specifically for profiling."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1664
msgid ""
"There is one special usage for which the text above doesn't apply: if the"
" filename ends with .ipy[nb], the file is run as ipython script, just as "
"if the commands were written on IPython prompt."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1669
#, python-format
msgid ""
"specify module name to load instead of script path. Similar to the -m "
"option for the python interpreter. Use this option last if you want to "
"combine with other %run options. Unlike the python interpreter only "
"source modules are allowed no .pyc or .pyo files. For example::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1677
msgid "will run the example module."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1680
msgid "disable shell-like glob expansion of arguments."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1684
msgid "Save a set of lines or a macro to a given filename."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1687
#, python-format
msgid "%save [options] filename n1-n2 n3-n4 ... n5 .. n6 ..."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1691
msgid ""
"-r: use 'raw' input.  By default, the 'processed' history is used, so "
"that magics are loaded in their transformed version to valid Python.  If "
"this option is given, the raw input as typed as the command line is used "
"instead."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1696
#, python-format
msgid ""
"-f: force overwrite.  If file exists, %save will prompt for overwrite "
"unless -f is given."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1699
msgid "-a: append to the file instead of overwriting it."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1701
#, python-format
msgid ""
"This function uses the same syntax as %history for input ranges, then "
"saves the lines to the filename you specify."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1704
msgid ""
"It adds a '.py' extension to the file if you don't do so yourself, and it"
" asks for confirmation before overwriting existing files."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1707
msgid "If `-r` option is used, the default extension is `.ipy`."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1711
msgid "Shell capture - run shell command and capture output (DEPRECATED use !)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1713
msgid "DEPRECATED. Suboptimal, retained for backwards compatibility."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1715
msgid "You should use the form 'var = !command' instead. Example:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1717
#, python-format
msgid "\"%sc -l myfiles = ls ~\" should now be written as"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1719
msgid "\"myfiles = !ls ~\""
msgstr ""

#: ../../source/interactive/magics-generated.txt:1721
msgid "myfiles.s, myfiles.l and myfiles.n still apply as documented below."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1725
#, python-format
msgid "%sc [options] varname=command"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1727
msgid ""
"IPython will run the given command using commands.getoutput(), and will "
"then update the user's interactive namespace with a variable called "
"varname, containing the value of the call.  Your command can contain "
"shell wildcards, pipes, etc."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1732
msgid ""
"The '=' sign in the syntax is mandatory, and the variable name you supply"
" must follow Python's standard conventions for valid names."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1735
msgid "(A special format without variable name exists for internal use)"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1739
msgid ""
"-l: list output.  Split the output on newlines into a list before "
"assigning it to the given variable.  By default the output is stored as a"
" single string."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1743
msgid "-v: verbose.  Print the contents of the variable."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1745
msgid ""
"In most cases you should not need to split as a list, because the "
"returned value is a special type of string which can automatically "
"provide its contents either as a list (split on newlines) or as a space-"
"separated string.  These are convenient, respectively, either for "
"sequential processing or to be passed to a shell command."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1751
msgid "For example::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1781
msgid ""
"Similarly, the lists returned by the -l option are also special, in the "
"sense that you can equally invoke the .s attribute on them to "
"automatically get a whitespace-separated string from their contents::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1793
msgid ""
"In summary, both the lists and strings used for output capture have the "
"following special attributes::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1802
msgid ""
"Set environment variables.  Assumptions are that either \"val\" is a name"
" in the user namespace, or val is something that evaluates to a string."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1807
#, python-format
msgid ""
"%set_env var val: set value for var %set_env var=val: set value for var "
"%set_env var=$val: set value for var, using python expansion if possible"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1813
#: ../../source/interactive/magics-generated.txt:1855
msgid "Shell execute - run shell command and capture output (!! is short-hand)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1815
#: ../../source/interactive/magics-generated.txt:1857
#, python-format
msgid "%sx command"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1817
#: ../../source/interactive/magics-generated.txt:1859
msgid ""
"IPython will run the given command using commands.getoutput(), and return"
" the result formatted as a list (split on '\\n').  Since the output is "
"_returned_, it will be stored in ipython's regular output cache Out[N] "
"and in the '_N' automatic variables."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1822
#: ../../source/interactive/magics-generated.txt:1864
msgid "Notes:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1824
#: ../../source/interactive/magics-generated.txt:1866
#, python-format
msgid ""
"1) If an input line begins with '!!', then %sx is automatically invoked."
"  That is, while::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1829
#: ../../source/interactive/magics-generated.txt:1871
msgid "causes ipython to simply issue system('ls'), typing::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1833
#: ../../source/interactive/magics-generated.txt:1875
msgid "is a shorthand equivalent to::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1837
#: ../../source/interactive/magics-generated.txt:1879
#, python-format
msgid ""
"2) %sx differs from %sc in that %sx automatically splits into a list, "
"like '%sc -l'.  The reason for this is to make it as easy as possible to "
"process line-oriented shell output via further python commands. %sc is "
"meant to provide much finer control, but requires more typing."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1843
#: ../../source/interactive/magics-generated.txt:1885
#, python-format
msgid "3) Just like %sc -l, this is a list with special attributes: ::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1850
#: ../../source/interactive/magics-generated.txt:1892
msgid ""
"This is very useful when trying to use such lists as arguments to system "
"commands."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1897
msgid "Print the last traceback with the currently active exception mode."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1899
#, python-format
msgid "See %xmode for changing exception reporting modes."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1903
msgid "Time execution of a Python statement or expression."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1905
msgid ""
"The CPU and wall clock times are printed, and the value of the expression"
" (if any) is returned.  Note that under Win32, system time is always "
"reported as 0, since it can not be measured."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1909
msgid "This function can be used both as a line and cell magic:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1911
#: ../../source/interactive/magics-generated.txt:1970
msgid ""
"In line mode you can time a single-line statement (though multiple ones "
"can be chained with using semicolons)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1914
msgid ""
"In cell mode, you can time the cell body (a directly following statement "
"raises an error)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1917
msgid ""
"This function provides very basic timing functionality.  Use the timeit "
"magic for more control over the measurement."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1958
msgid "Time execution of a Python statement or expression"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1961
msgid "%timeit [-n<N> -r<R> [-t|-c] -q -p<P> -o] statement"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1965
msgid "or in cell mode:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1963
#, python-format
msgid "%%timeit [-n<N> -r<R> [-t|-c] -q -p<P> -o] setup_code code code..."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1967
msgid ""
"Time execution of a Python statement or expression using the timeit "
"module.  This function can be used both as a line and cell magic:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1973
msgid ""
"In cell mode, the statement in the first line is used as setup code "
"(executed but not timed) and the body of the cell is timed.  The cell "
"body has access to any variables created in the setup code."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1977
msgid ""
"Options: -n<N>: execute the given statement <N> times in a loop. If this "
"value is not given, a fitting value is chosen."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1981
msgid ""
"-r<R>: repeat the loop iteration <R> times and take the best result. "
"Default: 3"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1984
msgid ""
"-t: use time.time to measure the time, which is the default on Unix. This"
" function measures wall time."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1987
msgid ""
"-c: use time.clock to measure the time, which is the default on Windows "
"and measures wall time. On Unix, resource.getrusage is used instead and "
"returns the CPU user time."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1991
msgid ""
"-p<P>: use a precision of <P> digits to display the timing result. "
"Default: 3"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1994
msgid "-q: Quiet, do not print result."
msgstr ""

#: ../../source/interactive/magics-generated.txt:1998
msgid "-o: return a TimeitResult that can be stored in a variable to inspect"
msgstr ""

#: ../../source/interactive/magics-generated.txt:1997
msgid "the result in more details."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2021
msgid ""
"The times reported by %timeit will be slightly higher than those reported"
" by the timeit.py script when variables are accessed. This is due to the "
"fact that %timeit executes the statement in the namespace of the shell, "
"compared with timeit.py, which uses a single setup statement to import "
"function or create variables. Generally, the bias does not matter as long"
" as results from timeit.py are not mixed with those from %timeit."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2031
msgid "Remove an alias"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2035
msgid "Unload an IPython extension by its module name."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2037
msgid ""
"Not all extensions can be unloaded, only those which define an "
"``unload_ipython_extension`` function."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2042
msgid "Print all interactive variables, with some minimal formatting."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2044
msgid ""
"If any arguments are given, only variables whose type matches one of "
"these are printed.  For example::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2049
msgid ""
"will only list functions and strings, excluding all other types of "
"variables.  To find the proper type names, simply use type(var) at a "
"command line to see how python prints type names.  For example:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2058
msgid "indicates that the type name for strings is 'str'."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2060
msgid ""
"``%who`` always excludes executed names loaded through your configuration"
" file and things which are internal to IPython."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2063
msgid ""
"This is deliberate, as typically you may load many modules and the "
"purpose of %who is to show you only what you've manually defined."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2069
msgid "Define two variables and list them with who::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2086
msgid "Return a sorted list of all interactive variables."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2088
msgid ""
"If arguments are given, only variables of types matching these arguments "
"are returned."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2094
msgid "Define two variables and list them with who_ls::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2111
msgid "Like %who, but gives some extra information about each variable."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2113
msgid "The same type filtering of %who can be applied here."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2115
msgid "For all variables, the type is printed. Additionally it prints:"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2117
msgid "For {},[],(): their length."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2119
msgid ""
"For numpy arrays, a summary with shape, number of elements, typecode and "
"size in memory."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2122
msgid ""
"Everything else: a string representation, snipping their middle if too "
"long."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2128
msgid "Define two variables and list them with whos::"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2142
msgid ""
"Delete a variable, trying to clear it from anywhere that IPython's "
"machinery has references to it. By default, this uses the identity of the"
" named object in the user namespace to remove references held under other"
" names. The object is also removed from the output history."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2149
msgid ""
"-n : Delete the specified name from all namespaces, without checking "
"their identity."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2154
msgid "Switch modes for the exception handlers."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2156
msgid "Valid modes: Plain, Context and Verbose."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2158
msgid "If called without arguments, acts as a toggle."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2161
msgid "Cell magics"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2165
#, python-format
msgid "%%bash script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2167
msgid "Run cells with bash in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2169
#, python-format
msgid "This is a shortcut for `%%script bash`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2177
msgid ""
"run the cell, capturing stdout, stderr, and IPython's rich display() "
"calls."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2185
msgid "output        The name of the variable in which to store output. This is a"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2181
msgid ""
"utils.io.CapturedIO object with stdout/err attributes for the text of the"
" captured output. CapturedOutput also has a show() method for displaying "
"the output, and __call__ as well, so you can use that to quickly display "
"the output. If unspecified, captured output is discarded."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2188
msgid "Don't capture stderr."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2189
msgid "Don't capture stdout."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2190
msgid "Don't capture IPython's rich display."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2194
msgid "Render the cell as a block of HTML"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2198
#: ../../source/interactive/magics-generated.txt:2202
msgid "Run the cell block of Javascript code"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2204
#, python-format
msgid "Alias of `%%javascript`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2208
msgid "Render the cell as a block of latex"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2210
msgid ""
"The subset of latex which is support depends on the implementation in the"
" client.  In the Jupyter Notebook, this magic only renders the subset of "
"latex defined by MathJax "
"[here](https://docs.mathjax.org/en/v2.5-latest/tex.html)."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2217
#, python-format
msgid "%%perl script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2219
msgid "Run cells with perl in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2221
#, python-format
msgid "This is a shortcut for `%%script perl`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2225
#, python-format
msgid "%%pypy script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2227
msgid "Run cells with pypy in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2229
#, python-format
msgid "This is a shortcut for `%%script pypy`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2233
#, python-format
msgid "%%python script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2235
msgid "Run cells with python in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2237
#, python-format
msgid "This is a shortcut for `%%script python`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2241
#, python-format
msgid "%%python2 script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2243
msgid "Run cells with python2 in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2245
#, python-format
msgid "This is a shortcut for `%%script python2`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2249
#, python-format
msgid "%%python3 script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2251
msgid "Run cells with python3 in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2253
#, python-format
msgid "This is a shortcut for `%%script python3`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2257
#, python-format
msgid "%%ruby script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2259
msgid "Run cells with ruby in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2261
#, python-format
msgid "This is a shortcut for `%%script ruby`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2269
msgid "Run a cell via a shell command"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2271
#, python-format
msgid ""
"The `%%script` line is like the #! line of script, specifying a program "
"(bash, perl, ruby, etc.) with which to run."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2274
msgid "The rest of the cell is run by that program."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2289
msgid ""
"The variable in which to store Popen instance. This is used only when "
"--bg option is given."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2291
msgid ""
"Whether to run the script in the background. If given, the only way to "
"see the output of the command is with --out/err."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2293
msgid ""
"The variable in which to store stderr from the script. If the script is "
"backgrounded, this will be the stderr *pipe*, instead of the stderr text "
"itself."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2296
msgid ""
"The variable in which to store stdout from the script. If the script is "
"backgrounded, this will be the stdout *pipe*, instead of the stderr text "
"itself."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2302
#, python-format
msgid "%%sh script magic"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2304
msgid "Run cells with sh in a subprocess."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2306
#, python-format
msgid "This is a shortcut for `%%script sh`"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2310
msgid "Render the cell as an SVG literal"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2318
msgid "Write the contents of the cell to a file."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2320
msgid "The file will be overwritten unless the -a (--append) flag is specified."
msgstr ""

#: ../../source/interactive/magics-generated.txt:2323
msgid "filename      file to write"
msgstr ""

#: ../../source/interactive/magics-generated.txt:2326
msgid ""
"Append contents of the cell to an existing file. The file will be created"
" if it does not exist."
msgstr ""

