# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/development/execution.rst:4
msgid "Execution semantics in the IPython kernel"
msgstr ""

#: ../../source/development/execution.rst:6
msgid "The execution of user code consists of the following phases:"
msgstr ""

#: ../../source/development/execution.rst:8
msgid "Fire the ``pre_execute`` event."
msgstr ""

#: ../../source/development/execution.rst:9
msgid "Fire the ``pre_run_cell`` event unless silent is ``True``."
msgstr ""

#: ../../source/development/execution.rst:10
msgid "Execute the ``code`` field, see below for details."
msgstr ""

#: ../../source/development/execution.rst:11
msgid ""
"If execution succeeds, expressions in ``user_expressions`` are computed. "
"This ensures that any error in the expressions don't affect the main code"
" execution."
msgstr ""

#: ../../source/development/execution.rst:13
msgid "Fire the ``post_execute`` event."
msgstr ""

#: ../../source/development/execution.rst:14
msgid "Fire the ``post_run_cell`` event unless silent is ``True``."
msgstr ""

#: ../../source/development/execution.rst:18
msgid ":doc:`/config/callbacks`"
msgstr ""

#: ../../source/development/execution.rst:21
msgid ""
"To understand how the ``code`` field is executed, one must know that "
"Python code can be compiled in one of three modes (controlled by the "
"``mode`` argument to the :func:`compile` builtin):"
msgstr ""

#: ../../source/development/execution.rst:35
msgid "*single*"
msgstr ""

#: ../../source/development/execution.rst:26
msgid ""
"Valid for a single interactive statement (though the source can contain "
"multiple lines, such as a for loop).  When compiled in this mode, the "
"generated bytecode contains special instructions that trigger the calling"
" of :func:`sys.displayhook` for any expression in the block that returns "
"a value. This means that a single statement can actually produce multiple"
" calls to :func:`sys.displayhook`, if for example it contains a loop "
"where each iteration computes an unassigned expression would generate 10 "
"calls::"
msgstr ""

#: ../../source/development/execution.rst:39
msgid "*exec*"
msgstr ""

#: ../../source/development/execution.rst:38
msgid ""
"An arbitrary amount of source code, this is how modules are compiled. "
":func:`sys.displayhook` is *never* implicitly called."
msgstr ""

#: ../../source/development/execution.rst:44
msgid "*eval*"
msgstr ""

#: ../../source/development/execution.rst:42
msgid ""
"A single expression that returns a value.  :func:`sys.displayhook` is "
"*never* implicitly called."
msgstr ""

#: ../../source/development/execution.rst:46
msgid ""
"The ``code`` field is split into individual blocks each of which is valid"
" for execution in 'single' mode, and then:"
msgstr ""

#: ../../source/development/execution.rst:49
msgid "If there is only a single block: it is executed in 'single' mode."
msgstr ""

#: ../../source/development/execution.rst:51
msgid "If there is more than one block:"
msgstr ""

#: ../../source/development/execution.rst:53
msgid ""
"if the last one is a single line long, run all but the last in 'exec' "
"mode and the very last one in 'single' mode.  This makes it easy to type "
"simple expressions at the end to see computed values."
msgstr ""

#: ../../source/development/execution.rst:57
msgid ""
"if the last one is no more than two lines long, run all but the last in "
"'exec' mode and the very last one in 'single' mode.  This makes it easy "
"to type simple expressions at the end to see computed values.  - "
"otherwise (last one is also multiline), run all in 'exec' mode"
msgstr ""

#: ../../source/development/execution.rst:62
msgid ""
"otherwise (last one is also multiline), run all in 'exec' mode as a "
"single unit."
msgstr ""

