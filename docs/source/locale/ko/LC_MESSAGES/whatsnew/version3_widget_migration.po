# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:2
msgid "Migrating Widgets to IPython 3"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:5
msgid "Upgrading Notebooks"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:7
msgid ""
"The first thing you'll notice when upgrading an IPython 2.0 widget "
"notebook to IPython 3.0 is the \"Notebook converted\" dialog. Click "
"\"ok\"."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:10
msgid ""
"All of the widgets distributed with IPython have been renamed. The "
"\"Widget\" suffix was removed from the end of the class name. i.e. "
"``ButtonWidget`` is now ``Button``."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:13
msgid "``ContainerWidget`` was renamed to ``Box``."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:14
msgid ""
"``PopupWidget`` was removed from IPython, because bootstrapjs was "
"problematic (creates global variables, etc.). If you use the "
"``PopupWidget``, try using a ``Box`` widget instead. If your notebook "
"can't live without the popup functionality, subclass the ``Box`` widget "
"(both in Python and JS) and use JQuery UI's ``draggable()`` and "
"``resizable()`` methods to mimic the behavior."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:20
msgid ""
"``add_class`` and ``remove_class`` were removed. More often than not a "
"new attribute exists on the widget that allows you to achieve the same "
"explicitly. i.e. the ``Button`` widget now has a ``button_style`` "
"attribute which you can set to 'primary', 'success', 'info', 'warning', "
"'danger', or '' instead of using ``add_class`` to add the bootstrap "
"class. ``VBox`` and ``HBox`` classes (flexible ``Box`` subclasses) were "
"added that allow you to avoid using ``add_class`` and ``remove_class`` to"
" make flexible box model layouts. As a last resort, if you can't find a "
"built in attribute for the class you want to use, a new ``_dom_classes`` "
"list trait was added, which combines ``add_class`` and ``remove_class`` "
"into one stateful list."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:32
msgid ""
"``set_css`` and ``get_css`` were removed in favor of explicit style "
"attributes - ``visible``, ``width``, ``height``, ``padding``, ``margin``,"
" ``color``, ``background_color``, ``border_color``, ``border_width``, "
"``border_radius``, ``border_style``, ``font_style``, ``font_weight``, "
"``font_size``, and ``font_family`` are a few. If you can't find a trait "
"to see the css attribute you need, you can, in order of preference, (A) "
"subclass to create your own custom widget, (B) use CSS and the "
"``_dom_classes`` trait to set ``_dom_classes``, or (C) use the ``_css`` "
"dictionary to set CSS styling like ``set_css`` and ``get_css``."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:42
msgid ""
"For selection widgets, such as ``Dropdown``, the ``values`` argument has "
"been renamed to ``options``."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:46
msgid "Upgrading Custom Widgets"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:49
msgid "Javascript"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:51
msgid ""
"If you are distributing your widget and decide to use the deferred "
"loading technique (preferred), you can remove all references to the "
"WidgetManager and the register model/view calls (see the Python section "
"below for more information)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:55
msgid ""
"In 2.0 require.js was used incorrectly, that has been fixed and now "
"loading works more like Python's import. Requiring ``widgets/js/widget`` "
"doesn't import the ``WidgetManager`` class, instead it imports a "
"dictionary that exposes the classes within that module:"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:70
msgid ""
"If you decide to continue to use the widget registry (by registering your"
" widgets with the manager), you can import a dictionary with a handle to "
"the WidgetManager class by requiring ``widgets/js/manager``. Doing so "
"will import:"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:79
msgid ""
"Don't rely on the ``IPython`` namespace for anything. To inherit from the"
" DOMWidgetView, WidgetView, or WidgetModel, require ``widgets/js/widget``"
" as ``widget``. If you were inheriting from DOMWidgetView, and the code "
"looked like this:"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:88
msgid "It would become this:"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:94
msgid ""
"Custom models are encouraged. When possible, it's recommended to move "
"your code into a custom model, so actions are performed 1 time, instead "
"of N times where N is the number of displayed views."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:99
msgid "Python"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:101
msgid ""
"Generally, custom widget Python code can remain unchanged. If you "
"distribute your custom widget, you may be using ``display`` and "
"``Javascript`` to publish the widget's Javascript to the front-end. That "
"is no longer the recommended way of distributing widget Javascript. "
"Instead have the user install the Javascript to his/her nbextension "
"directory or their profile's static directory. Then use the new "
"``_view_module`` and ``_model_module`` traitlets in combination with "
"``_view_name`` and ``_model_name`` to instruct require.js on how to load "
"the widget's Javascript. The Javascript is then loaded when the widget is"
" used for the first time."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:113
msgid "Details"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:116
msgid "Asynchronous"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:118
msgid ""
"In the IPython 2.x series the only way to register custom widget views "
"and models was to use the registry in the widget manager. Unfortunately, "
"using this method made distributing and running custom widgets difficult."
" The widget maintainer had to either use the rich display framework to "
"push the widget's Javascript to the notebook or instruct the users to "
"install the Javascript by hand in a custom profile. With the first "
"method, the maintainer would have to be careful about when the Javascript"
" was pushed to the front-end. If the Javascript was pushed on Python "
"widget ``import``, the widgets wouldn't work after page refresh. This is "
"because refreshing the page does not restart the kernel, and the Python "
"``import`` statement only runs once in a given kernel instance (unless "
"you reload the Python modules, which isn't straight forward). This meant "
"the maintainer would have to have a separate ``push_js()`` method that "
"the user would have to call after importing the widget's Python code."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:133
msgid ""
"Our solution was to add support for loading widget views and models using"
" require.js paths. Thus the comm and widget frameworks now support lazy "
"loading. To do so, everything had to be converted to asynchronous code. "
"HTML5 promises are used to accomplish that (`#6818 "
"<https://github.com/ipython/ipython/pull/6818>`__, `#6914 "
"<https://github.com/ipython/ipython/pull/6914>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:141
msgid "Symmetry"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:143
msgid ""
"In IPython 3.0, widgets can be instantiated from the front-end (`#6664 "
"<https://github.com/ipython/ipython/pull/6664>`__). On top of this, a "
"widget persistence API was added (`#7163 "
"<https://github.com/ipython/ipython/pull/7163>`__, `#7227 "
"<https://github.com/ipython/ipython/pull/7227>`__). With the widget "
"persistence API, you can persist your widget instances using Javascript. "
"This makes it easy to persist your widgets to your notebook document "
"(with a small amount of custom JS). By default, the widgets are persisted"
" to your web browsers local storage which makes them reappear when your "
"refresh the page."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:155
msgid "Smaller Changes"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:157
msgid ""
"Latex math is supported in widget ``description``\\ s (`#5937 "
"<https://github.com/ipython/ipython/pull/5937>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:159
msgid ""
"Widgets can be display more than once within a single container widget "
"(`#5963 <https://github.com/ipython/ipython/pull/5963>`__, `#6990 "
"<https://github.com/ipython/ipython/pull/6990>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:162
msgid ""
"``FloatRangeSlider`` and ``IntRangeSlider`` were added (`#6050 "
"<https://github.com/ipython/ipython/pull/6050>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:164
msgid ""
"\"Widget\" was removed from the ends of all of the widget class names "
"(`#6125 <https://github.com/ipython/ipython/pull/6125>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:166
msgid ""
"``ContainerWidget`` was renamed to ``Box`` (`#6125 "
"<https://github.com/ipython/ipython/pull/6125>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:168
msgid ""
"``HBox`` and ``VBox`` widgets were added (`#6125 "
"<https://github.com/ipython/ipython/pull/6125>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:170
msgid ""
"``add\\_class`` and ``remove\\_class`` were removed in favor of a "
"``_dom_classes`` list (`#6235 "
"<https://github.com/ipython/ipython/pull/6235>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:173
msgid ""
"``get\\_css`` and ``set\\_css`` were removed in favor of explicit traits "
"for widget styling (`#6235 "
"<https://github.com/ipython/ipython/pull/6235>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:176
msgid ""
"``jslink`` and ``jsdlink`` were added (`#6454 "
"<https://github.com/ipython/ipython/pull/6454>`__, `#7468 "
"<https://github.com/ipython/ipython/pull/7468>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:179
msgid ""
"An ``Output`` widget was added, which allows you to ``print`` and "
"``display`` within widgets (`#6670 "
"<https://github.com/ipython/ipython/pull/6670>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:182
msgid ""
"``PopupWidget`` was removed (`#7341 "
"<https://github.com/ipython/ipython/pull/7341>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:184
msgid ""
"A visual cue was added for widgets with 'dead' comms (`#7227 "
"<https://github.com/ipython/ipython/pull/7227>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:186
msgid ""
"A ``SelectMultiple`` widget was added (a ``Select`` widget that allows "
"multiple things to be selected at once) (`#6890 "
"<https://github.com/ipython/ipython/pull/6890>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:189
msgid ""
"A class was added to help manage children views (`#6990 "
"<https://github.com/ipython/ipython/pull/6990>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:191
msgid ""
"A warning was added that shows on widget import because it's expected "
"that the API will change again by IPython 4.0. This warning can be "
"suppressed (`#7107 <https://github.com/ipython/ipython/pull/7107>`__, "
"`#7200 <https://github.com/ipython/ipython/pull/7200>`__, `#7201 "
"<https://github.com/ipython/ipython/pull/7201>`__, `#7204 "
"<https://github.com/ipython/ipython/pull/7204>`__)."
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:199
msgid "Comm and Widget PR Index"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:201
msgid ""
"Here is a chronological list of PRs affecting the widget and comm "
"frameworks for IPython 3.0. Note that later PRs may revert changes made "
"in earlier PRs:"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:204
msgid ""
"Add placeholder attribute to text widgets `#5652 "
"<https://github.com/ipython/ipython/pull/5652>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:206
msgid ""
"Add latex support in widget labels, `#5937 "
"<https://github.com/ipython/ipython/pull/5937>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:208
msgid ""
"Allow widgets to display more than once within container widgets. `#5963 "
"<https://github.com/ipython/ipython/pull/5963>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:210
msgid "use require.js, `#5980 <https://github.com/ipython/ipython/pull/5980>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:212
msgid "Range widgets `#6050 <https://github.com/ipython/ipython/pull/6050>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:214
msgid ""
"Interact on\\_demand option `#6051 "
"<https://github.com/ipython/ipython/pull/6051>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:216
msgid ""
"Allow text input on slider widgets `#6106 "
"<https://github.com/ipython/ipython/pull/6106>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:218
msgid ""
"support binary buffers in comm messages `#6110 "
"<https://github.com/ipython/ipython/pull/6110>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:220
msgid ""
"Embrace the flexible box model in the widgets `#6125 "
"<https://github.com/ipython/ipython/pull/6125>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:222
msgid ""
"Widget trait serialization `#6128 "
"<https://github.com/ipython/ipython/pull/6128>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:224
msgid ""
"Make Container widgets take children as the first positional argument "
"`#6153 <https://github.com/ipython/ipython/pull/6153>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:226
msgid "once-displayed `#6168 <https://github.com/ipython/ipython/pull/6168>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:228
msgid ""
"Validate slider value, when limits change `#6171 "
"<https://github.com/ipython/ipython/pull/6171>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:230
msgid ""
"Unregistering comms in Comm Manager `#6216 "
"<https://github.com/ipython/ipython/pull/6216>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:232
msgid ""
"Add EventfulList and EventfulDict trait types. `#6228 "
"<https://github.com/ipython/ipython/pull/6228>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:234
msgid ""
"Remove add/remove\\_class and set/get\\_css. `#6235 "
"<https://github.com/ipython/ipython/pull/6235>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:236
msgid ""
"avoid unregistering widget model twice `#6250 "
"<https://github.com/ipython/ipython/pull/6250>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:238
msgid ""
"Widget property lock should compare json states, not python states `#6332"
" <https://github.com/ipython/ipython/pull/6332>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:240
msgid ""
"Strip the IPY\\_MODEL\\_ prefix from widget IDs before referencing them. "
"`#6377 <https://github.com/ipython/ipython/pull/6377>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:242
msgid ""
"\"event\" is not defined error in Firefox `#6437 "
"<https://github.com/ipython/ipython/pull/6437>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:244
msgid "Javascript link `#6454 <https://github.com/ipython/ipython/pull/6454>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:246
msgid ""
"Bulk update of widget attributes `#6463 "
"<https://github.com/ipython/ipython/pull/6463>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:248
msgid ""
"Creating a widget registry on the Python side. `#6493 "
"<https://github.com/ipython/ipython/pull/6493>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:250
msgid ""
"Allow widget views to be loaded from require modules `#6494 "
"<https://github.com/ipython/ipython/pull/6494>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:252
msgid "Fix Issue #6530 `#6532 <https://github.com/ipython/ipython/pull/6532>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:254
msgid ""
"Make comm manager (mostly) independent of InteractiveShell `#6540 "
"<https://github.com/ipython/ipython/pull/6540>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:256
msgid ""
"Add semantic classes to top-level containers for single widgets `#6609 "
"<https://github.com/ipython/ipython/pull/6609>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:258
msgid ""
"Selection Widgets: forcing 'value' to be in 'values' `#6617 "
"<https://github.com/ipython/ipython/pull/6617>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:260
msgid ""
"Allow widgets to be constructed from Javascript `#6664 "
"<https://github.com/ipython/ipython/pull/6664>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:262
msgid "Output widget `#6670 <https://github.com/ipython/ipython/pull/6670>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:264
msgid ""
"Minor change in widgets.less to fix alignment issue `#6681 "
"<https://github.com/ipython/ipython/pull/6681>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:266
msgid ""
"Make Selection widgets respect values order. `#6747 "
"<https://github.com/ipython/ipython/pull/6747>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:268
msgid ""
"Widget persistence API `#6789 "
"<https://github.com/ipython/ipython/pull/6789>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:270
msgid ""
"Add promises to the widget framework. `#6818 "
"<https://github.com/ipython/ipython/pull/6818>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:272
msgid ""
"SelectMultiple widget `#6890 "
"<https://github.com/ipython/ipython/pull/6890>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:274
msgid ""
"Tooltip on toggle button `#6923 "
"<https://github.com/ipython/ipython/pull/6923>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:276
msgid ""
"Allow empty text box \\*while typing\\* for numeric widgets `#6943 "
"<https://github.com/ipython/ipython/pull/6943>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:278
msgid ""
"Ignore failure of widget MathJax typesetting `#6948 "
"<https://github.com/ipython/ipython/pull/6948>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:280
msgid ""
"Refactor the do\\_diff and manual child view lists into a separate "
"ViewList object `#6990 <https://github.com/ipython/ipython/pull/6990>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:283
msgid ""
"Add warning to widget namespace import. `#7107 "
"<https://github.com/ipython/ipython/pull/7107>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:285
msgid "lazy load widgets `#7120 <https://github.com/ipython/ipython/pull/7120>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:287
msgid ""
"Fix padding of widgets. `#7139 "
"<https://github.com/ipython/ipython/pull/7139>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:289
msgid ""
"Persist widgets across page refresh `#7163 "
"<https://github.com/ipython/ipython/pull/7163>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:291
msgid ""
"Make the widget experimental error a real python warning `#7200 "
"<https://github.com/ipython/ipython/pull/7200>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:293
msgid ""
"Make the widget error message shorter and more understandable. `#7201 "
"<https://github.com/ipython/ipython/pull/7201>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:295
msgid ""
"Make the widget warning brief and easy to filter `#7204 "
"<https://github.com/ipython/ipython/pull/7204>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:297
msgid ""
"Add visual cue for widgets with dead comms `#7227 "
"<https://github.com/ipython/ipython/pull/7227>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:299
msgid ""
"Widget values as positional arguments `#7260 "
"<https://github.com/ipython/ipython/pull/7260>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:301
msgid ""
"Remove the popup widget `#7341 "
"<https://github.com/ipython/ipython/pull/7341>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:303
msgid ""
"document and validate link, dlink `#7468 "
"<https://github.com/ipython/ipython/pull/7468>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:305
msgid ""
"Document interact 5637 `#7525 "
"<https://github.com/ipython/ipython/pull/7525>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:307
msgid ""
"Update some broken examples of using widgets `#7547 "
"<https://github.com/ipython/ipython/pull/7547>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:309
msgid ""
"Use Output widget with Interact `#7554 "
"<https://github.com/ipython/ipython/pull/7554>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:311
msgid ""
"don't send empty execute\\_result messages `#7560 "
"<https://github.com/ipython/ipython/pull/7560>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:313
msgid ""
"Validation on the python side `#7602 "
"<https://github.com/ipython/ipython/pull/7602>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:315
msgid ""
"only show prompt overlay if there's a prompt `#7661 "
"<https://github.com/ipython/ipython/pull/7661>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:317
msgid ""
"Allow predictate to be used for comparison in selection widgets `#7674 "
"<https://github.com/ipython/ipython/pull/7674>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:319
msgid ""
"Fix widget view persistence. `#7680 "
"<https://github.com/ipython/ipython/pull/7680>`__"
msgstr ""

#: ../../source/whatsnew/version3_widget_migration.rst:321
msgid ""
"Revert \"Use Output widget with Interact\" `#7703 "
"<https://github.com/ipython/ipython/pull/7703>`__"
msgstr ""

