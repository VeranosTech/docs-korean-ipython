# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/api/generated/IPython.testing.ipunittest.rst:4
msgid "Module: :mod:`testing.ipunittest`"
msgstr ""

#: IPython.testing.ipunittest:1 of
msgid "Experimental code for cleaner support of IPython syntax with unittest."
msgstr ""

#: IPython.testing.ipunittest:3 of
msgid ""
"In IPython up until 0.10, we've used very hacked up nose machinery for "
"running tests with IPython special syntax, and this has proved to be "
"extremely slow. This module provides decorators to try a different "
"approach, stemming from a conversation Brian and I (FP) had about this "
"problem Sept/09."
msgstr ""

#: IPython.testing.ipunittest:8 of
msgid ""
"The goal is to be able to easily write simple functions that can be seen "
"by unittest as tests, and ultimately for these to support doctests with "
"full IPython syntax.  Nose already offers this based on naming "
"conventions and our hackish plugins, but we are seeking to move away from"
" nose dependencies if possible."
msgstr ""

#: IPython.testing.ipunittest:14 of
msgid "This module follows a different approach, based on decorators."
msgstr ""

#: IPython.testing.ipunittest:16 of
msgid ""
"A decorator called @ipdoctest can mark any function as having a docstring"
" that should be viewed as a doctest, but after syntax conversion."
msgstr ""

#: IPython.testing.ipunittest:20 of
msgid "Authors"
msgstr ""

#: IPython.testing.ipunittest:22 of
msgid "Fernando Perez <Fernando.Perez@berkeley.edu>"
msgstr ""

#: ../../source/api/generated/IPython.testing.ipunittest.rst:10
msgid "2 Classes"
msgstr ""

#: IPython.testing.ipunittest.Doc2UnitTester:1
#: IPython.testing.ipunittest.IPython2PythonConverter:1 of
msgid "Bases: :class:`object`"
msgstr ""

#: IPython.testing.ipunittest.IPython2PythonConverter:1 of
msgid "Convert IPython 'syntax' to valid Python."
msgstr ""

#: IPython.testing.ipunittest.IPython2PythonConverter:3 of
msgid ""
"Eventually this code may grow to be the full IPython syntax conversion "
"implementation, but for now it only does prompt conversion."
msgstr ""

#: IPython.testing.ipunittest.IPython2PythonConverter.__init__:1 of
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: IPython.testing.ipunittest.Doc2UnitTester:1 of
msgid "Class whose instances act as a decorator for docstring testing."
msgstr ""

#: IPython.testing.ipunittest.Doc2UnitTester:3 of
msgid ""
"In practice we're only likely to need one instance ever, made below "
"(though no attempt is made at turning it into a singleton, there is no "
"need for that)."
msgstr ""

#: IPython.testing.ipunittest.Doc2UnitTester.__init__:1 of
msgid "New decorator."
msgstr ""

#: IPython.testing.ipunittest.Doc2UnitTester.__init__ of
msgid "Parameters"
msgstr ""

#: IPython.testing.ipunittest.Doc2UnitTester.__init__:3 of
msgid "Passed to the doctest finder and runner to control verbosity."
msgstr ""

#: ../../source/api/generated/IPython.testing.ipunittest.rst:25
msgid "2 Functions"
msgstr ""

#: IPython.testing.ipunittest.count_failures:1 of
msgid "Count number of failures in a doctest runner."
msgstr ""

#: IPython.testing.ipunittest.count_failures:3 of
msgid "Code modeled after the summarize() method in doctest."
msgstr ""

#: IPython.testing.ipunittest.ipdocstring:1 of
msgid "Change the function docstring via ip2py."
msgstr ""

