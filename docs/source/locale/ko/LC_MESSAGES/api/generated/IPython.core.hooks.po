# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/api/generated/IPython.core.hooks.rst:4
msgid "Module: :mod:`core.hooks`"
msgstr ""

#: IPython.core.hooks:1 of
msgid "Hooks for IPython."
msgstr ""

#: IPython.core.hooks:3 of
msgid ""
"In Python, it is possible to overwrite any method of any object if you "
"really want to.  But IPython exposes a few 'hooks', methods which are "
"*designed* to be overwritten by users for customization purposes.  This "
"module defines the default versions of all such hooks, which get used by "
"IPython if not overridden by the user."
msgstr ""

#: IPython.core.hooks:9 of
msgid ""
"Hooks are simple functions, but they should be declared with ``self`` as "
"their first argument, because when activated they are registered into "
"IPython as instance methods. The self argument will be the IPython "
"running instance itself, so hooks have full access to the entire IPython "
"object."
msgstr ""

#: IPython.core.hooks:14 of
msgid ""
"If you wish to define a new hook and activate it, you can make an "
":doc:`extension </config/extensions/index>` or a :ref:`startup script "
"<startup_files>`. For example, you could use a startup file like this::"
msgstr ""

#: ../../source/api/generated/IPython.core.hooks.rst:10
msgid "1 Class"
msgstr ""

#: IPython.core.hooks.CommandChainDispatcher:1 of
msgid "Bases: :class:`object`"
msgstr ""

#: IPython.core.hooks.CommandChainDispatcher:1 of
msgid "Dispatch calls to a chain of commands until some func can handle it"
msgstr ""

#: IPython.core.hooks.CommandChainDispatcher:3 of
msgid ""
"Usage: instantiate, execute \"add\" to add commands (with optional "
"priority), execute normally via f() calling mechanism."
msgstr ""

#: IPython.core.hooks.CommandChainDispatcher.__init__:1 of
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: IPython.core.hooks.CommandChainDispatcher.add:1 of
msgid "Add a func to the cmd chain with given priority"
msgstr ""

#: ../../source/api/generated/IPython.core.hooks.rst:19
msgid "9 Functions"
msgstr ""

#: IPython.core.hooks.editor:1 of
msgid "Open the default editor at the given filename and linenumber."
msgstr ""

#: IPython.core.hooks.editor:3 of
msgid ""
"This is IPython's default editor hook, you can use it as an example to "
"write your own modified one.  To set your own editor function as the new "
"editor hook, call ip.set_hook('editor',yourfunc)."
msgstr ""

#: IPython.core.hooks.fix_error_editor:1 of
msgid "DEPRECATED"
msgstr ""

#: IPython.core.hooks.fix_error_editor:3 of
msgid ""
"Open the editor at the given filename, linenumber, column and show an "
"error message. This is used for correcting syntax errors. The current "
"implementation only has special support for the VIM editor, and falls "
"back on the 'editor' hook if VIM is not used."
msgstr ""

#: IPython.core.hooks.fix_error_editor:8 of
msgid "Call ip.set_hook('fix_error_editor',yourfunc) to use your own function,"
msgstr ""

#: IPython.core.hooks.shutdown_hook:1 of
msgid "default shutdown hook"
msgstr ""

#: IPython.core.hooks.shutdown_hook:3 of
msgid ""
"Typically, shutdown hooks should raise TryNext so all shutdown ops are "
"done"
msgstr ""

#: IPython.core.hooks.late_startup_hook:1 of
msgid "Executed after ipython has been constructed and configured"
msgstr ""

#: IPython.core.hooks.show_in_pager:1 of
msgid "Run a string through pager"
msgstr ""

#: IPython.core.hooks.pre_prompt_hook:1 of
msgid "Run before displaying the next prompt"
msgstr ""

#: IPython.core.hooks.pre_prompt_hook:3 of
msgid ""
"Use this e.g. to display output from asynchronous operations (in order to"
" not mess up text entry)"
msgstr ""

#: IPython.core.hooks.pre_run_code_hook:1 of
msgid "Executed before running the (prefiltered) code in IPython"
msgstr ""

#: IPython.core.hooks.clipboard_get:1 of
msgid "Get text from the clipboard."
msgstr ""

