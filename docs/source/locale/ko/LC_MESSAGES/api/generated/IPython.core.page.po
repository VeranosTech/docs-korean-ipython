# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/api/generated/IPython.core.page.rst:4
msgid "Module: :mod:`core.page`"
msgstr ""

#: IPython.core.page:1 of
msgid "Paging capabilities for IPython.core"
msgstr ""

#: IPython.core.page:4 of
msgid "Notes"
msgstr ""

#: IPython.core.page:5 of
msgid ""
"For now this uses IPython hooks, so it can't be in IPython.utils.  If we "
"can get rid of that dependency, we could move it there. -----"
msgstr ""

#: ../../source/api/generated/IPython.core.page.rst:10
msgid "10 Functions"
msgstr ""

#: IPython.core.page.display_page:1 of
msgid "Just display, no paging. screen_lines is ignored."
msgstr ""

#: IPython.core.page.as_hook:1 of
msgid "Wrap a pager func to strip the `self` arg"
msgstr ""

#: IPython.core.page.as_hook:3 of
msgid "so it can be called as a hook."
msgstr ""

#: IPython.core.page.page_dumb:1 of
msgid "Very dumb 'pager' in Python, for when nothing else works."
msgstr ""

#: IPython.core.page.page_dumb:3 of
msgid ""
"Only moves forward, same interface as page(), except for pager_cmd and "
"mode."
msgstr ""

#: IPython.core.page.pager_page:1 of
msgid "Display a string, piping through a pager after a certain length."
msgstr ""

#: IPython.core.page.pager_page:3 of
msgid ""
"strng can be a mime-bundle dict, supplying multiple representations, "
"keyed by mime-type."
msgstr ""

#: IPython.core.page.pager_page:6 of
msgid ""
"The screen_lines parameter specifies the number of *usable* lines of your"
" terminal screen (total lines minus lines you need to reserve to show "
"other information)."
msgstr ""

#: IPython.core.page.pager_page:10 of
msgid ""
"If you set screen_lines to a number <=0, page() will try to auto-"
"determine your screen size and will only use up to "
"(screen_size+screen_lines) for printing, paging after that. That is, if "
"you want auto-detection but need to reserve the bottom 3 lines of the "
"screen, use screen_lines = -3, and for auto-detection without any lines "
"reserved simply use screen_lines = 0."
msgstr ""

#: IPython.core.page.pager_page:16 of
msgid ""
"If a string won't fit in the allowed lines, it is sent through the "
"specified pager command. If none given, look for PAGER in the "
"environment, and ultimately default to less."
msgstr ""

#: IPython.core.page.pager_page:20 of
msgid ""
"If no system pager works, the string is sent through a 'dumb pager' "
"written in python, very simplistic."
msgstr ""

#: IPython.core.page.page:1 of
msgid "Display content in a pager, piping through a pager after a certain length."
msgstr ""

#: IPython.core.page.page:3 of
msgid ""
"data can be a mime-bundle dict, supplying multiple representations, keyed"
" by mime-type, or text."
msgstr ""

#: IPython.core.page.page:6 of
msgid ""
"Pager is dispatched via the `show_in_pager` IPython hook. If no hook is "
"registered, `pager_page` will be used."
msgstr ""

#: IPython.core.page.page_file:1 of
msgid "Page a file, using an optional pager command and starting line."
msgstr ""

#: IPython.core.page.get_pager_cmd:1 of
msgid "Return a pager command."
msgstr ""

#: IPython.core.page.get_pager_cmd:3 of
msgid "Makes some attempts at finding an OS-correct one."
msgstr ""

#: IPython.core.page.get_pager_start:1 of
msgid "Return the string for paging files with an offset."
msgstr ""

#: IPython.core.page.get_pager_start:3 of
msgid "This is the '+N' argument which less and more (under Unix) accept."
msgstr ""

#: IPython.core.page.snip_print:1 of
msgid "Print a string snipping the midsection to fit in width."
msgstr ""

#: IPython.core.page.snip_print:3 of
msgid "print_full: mode control:"
msgstr ""

#: IPython.core.page.snip_print:5 of
msgid "0: only snip long strings"
msgstr ""

#: IPython.core.page.snip_print:6 of
msgid "1: send to page() directly."
msgstr ""

#: IPython.core.page.snip_print:7 of
msgid "2: snip long strings and ask for full length viewing with page()"
msgstr ""

#: IPython.core.page.snip_print:9 of
msgid "Return 1 if snipping was necessary, 0 otherwise."
msgstr ""

