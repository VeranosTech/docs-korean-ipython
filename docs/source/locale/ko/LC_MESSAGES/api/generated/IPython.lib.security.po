# SOME DESCRIPTIVE TITLE.
# Copyright (C) The IPython Development Team
# This file is distributed under the same license as the IPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IPython 7.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 11:46+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../<rst_prolog>:4
msgid ""
"This documentation covers a development version of IPython. The "
"development version may differ significantly from the latest stable "
"release."
msgstr ""

#: ../../<rst_prolog>:9
msgid ""
"This documentation covers IPython versions 6.0 and higher. Beginning with"
" version 6.0, IPython stopped supporting compatibility with Python "
"versions lower than 3.3 including all versions of Python 2.7."
msgstr ""

#: ../../<rst_prolog>:13
msgid ""
"If you are looking for an IPython version compatible with Python 2.7, "
"please use the IPython 5.x LTS release and refer to its documentation "
"(LTS is the long term support release)."
msgstr ""

#: ../../source/api/generated/IPython.lib.security.rst:4
msgid "Module: :mod:`lib.security`"
msgstr ""

#: IPython.lib.security:1 of
msgid "Password generation for the IPython notebook."
msgstr ""

#: ../../source/api/generated/IPython.lib.security.rst:10
msgid "2 Functions"
msgstr ""

#: IPython.lib.security.passwd:1 of
msgid "Generate hashed password and salt for use in notebook configuration."
msgstr ""

#: IPython.lib.security.passwd:3 of
msgid ""
"In the notebook configuration, set `c.NotebookApp.password` to the "
"generated string."
msgstr ""

#: IPython.lib.security.passwd IPython.lib.security.passwd_check of
msgid "Parameters"
msgstr ""

#: IPython.lib.security.passwd:6 of
msgid ""
"Password to hash.  If unspecified, the user is asked to input and verify "
"a password."
msgstr ""

#: IPython.lib.security.passwd:9 of
msgid ""
"Hashing algorithm to use (e.g, 'sha1' or any argument supported by "
":func:`hashlib.new`)."
msgstr ""

#: IPython.lib.security.passwd IPython.lib.security.passwd_check of
msgid "Returns"
msgstr ""

#: IPython.lib.security.passwd:13 of
msgid ""
"**hashed_passphrase** -- Hashed password, in the format "
"'hash_algorithm:salt:passphrase_hash'."
msgstr ""

#: IPython.lib.security.passwd IPython.lib.security.passwd_check of
msgid "Return type"
msgstr ""

#: IPython.lib.security.passwd:17 IPython.lib.security.passwd_check:12 of
msgid "Examples"
msgstr ""

#: IPython.lib.security.passwd_check:1 of
msgid "Verify that a given passphrase matches its hashed version."
msgstr ""

#: IPython.lib.security.passwd_check:3 of
msgid "Hashed password, in the format returned by `passwd`."
msgstr ""

#: IPython.lib.security.passwd_check:5 of
msgid "Passphrase to validate."
msgstr ""

#: IPython.lib.security.passwd_check:8 of
msgid "**valid** -- True if the passphrase matches the hash."
msgstr ""

